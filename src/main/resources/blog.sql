/*
 Navicat Premium Data Transfer

 Source Server         : localhost_3306
 Source Server Type    : MySQL
 Source Server Version : 80021
 Source Host           : localhost:3306
 Source Schema         : blog

 Target Server Type    : MySQL
 Target Server Version : 80021
 File Encoding         : 65001

 Date: 31/12/2020 18:49:14
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for article
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article` (
  `id` int NOT NULL AUTO_INCREMENT,
  `create_time` varchar(20) COLLATE utf8mb4_bin DEFAULT NULL,
  `update_time` varchar(20) COLLATE utf8mb4_bin DEFAULT NULL,
  `comment` int DEFAULT '0',
  `content` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin,
  `description` varchar(1023) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL,
  `keywords` varchar(511) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL,
  `password` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL,
  `status` int DEFAULT '1',
  `thumb` varchar(1023) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL,
  `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `top_priority` int DEFAULT '0',
  `url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL,
  `type` int DEFAULT NULL,
  `publicity_level` int DEFAULT NULL,
  `user_id` int NOT NULL,
  `time_stamp` bigint DEFAULT NULL,
  `markdown` longtext COLLATE utf8mb4_bin,
  `visit` int DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `url_index` (`url`)
) ENGINE=InnoDB AUTO_INCREMENT=49 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin;

-- ----------------------------
-- Records of article
-- ----------------------------
BEGIN;
INSERT INTO `article` VALUES (12, '2020-12-12 01:44:27', '2020-12-14 23:57:52', 1, '<body>\n <p>sssssss</p> \n</body>', '简直6666啊', '牛逼plus', '956115488', 1, '/blog/common/file?fileName=316b3d8a-9286-408e-a7d1-93adef8cc568截屏2020-11-30 上午10.06.56.png', '关于java的博客', NULL, '75148923aeee4418a9e81573edc56e50', 2, 6, 2, 1607708667282, 'sssssss', 1);
INSERT INTO `article` VALUES (13, '2020-12-14 19:24:58', '2020-12-15 22:54:05', 1, '<body>\n <p>ssssssss这是测试的博客2123i298292</p> \n</body>', '带你装逼带你飞', '装逼文', '1234', 1, NULL, '测试博客2222', NULL, 'd09b11183b5141ac835e392ac7275965', 27, 6, 2, 1607945098675, 'ssssssss这是测试的博客2123i298292', 2);
INSERT INTO `article` VALUES (14, '2020-12-14 23:25:46', '2020-12-15 21:45:48', 1, '<body>\n <p>你好世界<br>hello word!</p> \n <pre class=\"prettyprint linenums prettyprinted\" style=\"\">\n  <ol class=\"linenums\">\n   <li class=\"L0\"><code><span class=\"kwd\">package</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">dao</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L1\"><code></code></li>\n   <li class=\"L2\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">dao</span><span class=\"pun\">.</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"typ\">BlogMethodSql</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L3\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">dao</span><span class=\"pun\">.</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"typ\">CategoryMethodSql</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L4\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">framework</span><span class=\"pun\">.</span><span class=\"typ\">Invocation</span><span class=\"pun\">.</span><span class=\"typ\">DaoInvocationHandlerImpl</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L5\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">framework</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.*;</span></code></li>\n   <li class=\"L6\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">model</span><span class=\"pun\">.</span><span class=\"typ\">Article</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L7\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">model</span><span class=\"pun\">.</span><span class=\"typ\">Category</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L8\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">model</span><span class=\"pun\">.</span><span class=\"typ\">DetailedArticle</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L9\"><code></code></li>\n   <li class=\"L0\"><code><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">List</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L1\"><code></code></li>\n   <li class=\"L2\"><code><span class=\"com\">/**</span></code></li>\n   <li class=\"L3\"><code><span class=\"com\"> * @Author gujianyang</span></code></li>\n   <li class=\"L4\"><code><span class=\"com\"> * @Date 2020/12/10</span></code></li>\n   <li class=\"L5\"><code><span class=\"com\"> * @Class BlogDao</span></code></li>\n   <li class=\"L6\"><code><span class=\"com\"> */</span></code></li>\n   <li class=\"L7\"><code><span class=\"lit\">@Dao</span></code></li>\n   <li class=\"L8\"><code><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">interface</span><span class=\"pln\"> </span><span class=\"typ\">BlogDao</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L9\"><code></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"lit\">@Insert</span><span class=\"pun\">(</span><span class=\"str\">\"INSERT INTO `blog`.`article` (  `create_time`,  `update_time`,  `comment`,  `content`,  \"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"str\">\"`description`,  `keywords`,  `password`,  `status`,  `thumb`,  `title`,  `top_priority`,  `url`, \"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"str\">\" `type`,  `publicity_level`,  `user_id`,time_stamp,markdown   )  \"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"str\">\"VALUES  (  #{create_time},  #{update_time},  #{comment},  #{content},  \"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">            </span><span class=\"str\">\"#{description},  #{keywords},  #{password},  #{status},  #{thumb},  #{title},  #{top_priority}, \"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">            </span><span class=\"str\">\" #{url},  #{type},  #{publicity_level},  #{user_id} ,#{time_stamp},#{markdown}  );\"</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"kwd\">int</span><span class=\"pln\"> releaseNewBlog</span><span class=\"pun\">(</span><span class=\"typ\">Article</span><span class=\"pln\"> article</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L7\"><code></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"lit\">@UseCustomMethod</span><span class=\"pun\">(</span><span class=\"pln\">value </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">CategoryMethodSql</span><span class=\"pun\">.</span><span class=\"typ\">CategoryCountMethod</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">,</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">            sqlType </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">DaoInvocationHandlerImpl</span><span class=\"pun\">.</span><span class=\"typ\">SqlType</span><span class=\"pun\">.</span><span class=\"pln\">SELECT</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"kwd\">int</span><span class=\"pln\"> getUserBlogCategoriesCount</span><span class=\"pun\">(</span><span class=\"typ\">Category</span><span class=\"pln\"> category</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L1\"><code></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"lit\">@UseCustomMethod</span><span class=\"pun\">(</span><span class=\"pln\">value </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">CategoryMethodSql</span><span class=\"pun\">.</span><span class=\"typ\">CategoryDataMethod</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">,</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            sqlType </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">DaoInvocationHandlerImpl</span><span class=\"pun\">.</span><span class=\"typ\">SqlType</span><span class=\"pun\">.</span><span class=\"pln\">SELECT</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"typ\">Category</span><span class=\"pun\">&gt;</span><span class=\"pln\"> getUserBlogCategories</span><span class=\"pun\">(</span><span class=\"typ\">Category</span><span class=\"pln\"> category</span><span class=\"pun\">,</span><span class=\"typ\">Integer</span><span class=\"pln\"> page</span><span class=\"pun\">,</span><span class=\"typ\">Integer</span><span class=\"pln\"> pageSize</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L5\"><code></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"lit\">@Select</span><span class=\"pun\">(</span><span class=\"str\">\"select count(*) from category where name=#{name} and create_user=#{userId}\"</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"kwd\">int</span><span class=\"pln\"> selectUserCategoryByName</span><span class=\"pun\">(</span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"name\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> name</span><span class=\"pun\">,</span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"userId\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pln\"> userId</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L8\"><code></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"lit\">@Insert</span><span class=\"pun\">(</span><span class=\"str\">\"INSERT INTO category (  `name`, `lock`, `description`, `create_time`, `create_user`,  `time_stamp` )\\n\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"str\">\"VALUES\\n\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"str\">\"\\t(  #{name}, #{lock}, #{description}, #{create_time}, #{create_user}, #{time_stamp} );\"</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"kwd\">int</span><span class=\"pln\"> addNewCategory</span><span class=\"pun\">(</span><span class=\"typ\">Category</span><span class=\"pln\"> category</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L3\"><code></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"lit\">@Select</span><span class=\"pun\">(</span><span class=\"str\">\"select* from article where user_id=#{id} \"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">            </span><span class=\"str\">\"and status&lt;&gt;4 and status&lt;&gt;2 \"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"str\">\"order by id desc limit #{start},#{end}\"</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"typ\">Article</span><span class=\"pun\">&gt;</span><span class=\"pln\"> selectUserBlogs</span><span class=\"pun\">(</span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"id\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pln\"> id</span><span class=\"pun\">,</span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"start\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> s</span><span class=\"pun\">,</span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"end\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> e</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L8\"><code></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"lit\">@Select</span><span class=\"pun\">(</span><span class=\"str\">\"select * from category where id=#{id} and create_user=#{userId}\"</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"typ\">Category</span><span class=\"pln\"> selectUserCategoryById</span><span class=\"pun\">(</span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"id\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pln\"> id</span><span class=\"pun\">,</span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"userId\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pln\"> userId</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L1\"><code></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"lit\">@Select</span><span class=\"pun\">(</span><span class=\"str\">\"select count(*) from article where type=#{type}\"</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"kwd\">int</span><span class=\"pln\"> getBlogCountByCategory</span><span class=\"pun\">(</span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"type\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pln\"> id</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L4\"><code></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"lit\">@Delete</span><span class=\"pun\">(</span><span class=\"str\">\"delete from category where id=#{id}\"</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"kwd\">int</span><span class=\"pln\"> deleteCategoryById</span><span class=\"pun\">(</span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"id\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pln\"> id</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L7\"><code></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"lit\">@Update</span><span class=\"pun\">(</span><span class=\"str\">\"update article set type=null where type=#{type};\"</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"kwd\">int</span><span class=\"pln\"> resetBlogsCategoryByCategoryId</span><span class=\"pun\">(</span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"type\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pln\"> id</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L0\"><code></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"lit\">@Update</span><span class=\"pun\">(</span><span class=\"str\">\"update category set name=#{name},category.lock=#{lock},description=#{description},\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"str\">\"update_time=#{update_time} where id=#{id};\"</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"kwd\">int</span><span class=\"pln\"> updateCategory</span><span class=\"pun\">(</span><span class=\"typ\">Category</span><span class=\"pln\"> category</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L4\"><code></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"lit\">@Update</span><span class=\"pun\">(</span><span class=\"str\">\"update category set category.lock=#{lock} where id=#{id};\"</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"kwd\">int</span><span class=\"pln\"> updateCategoryLock</span><span class=\"pun\">(</span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"id\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pln\"> id</span><span class=\"pun\">,</span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"lock\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pln\"> </span><span class=\"kwd\">lock</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L7\"><code></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"lit\">@UseCustomMethod</span><span class=\"pun\">(</span><span class=\"pln\">value </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">BlogMethodSql</span><span class=\"pun\">.</span><span class=\"typ\">BlogCountMethod</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">,</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">            sqlType </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">DaoInvocationHandlerImpl</span><span class=\"pun\">.</span><span class=\"typ\">SqlType</span><span class=\"pun\">.</span><span class=\"pln\">SELECT</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"kwd\">int</span><span class=\"pln\"> selectUserBlogsCount</span><span class=\"pun\">(</span><span class=\"typ\">Article</span><span class=\"pln\"> article</span><span class=\"pun\">,</span><span class=\"typ\">Boolean</span><span class=\"pln\"> isDelete</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L1\"><code></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"lit\">@UseCustomMethod</span><span class=\"pun\">(</span><span class=\"pln\">value </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">BlogMethodSql</span><span class=\"pun\">.</span><span class=\"typ\">BlogDataMethod</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">,</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            sqlType </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">DaoInvocationHandlerImpl</span><span class=\"pun\">.</span><span class=\"typ\">SqlType</span><span class=\"pun\">.</span><span class=\"pln\">SELECT</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"typ\">DetailedArticle</span><span class=\"pun\">&gt;</span><span class=\"pln\"> selectUserBlogsByArgs</span><span class=\"pun\">(</span><span class=\"typ\">Article</span><span class=\"pln\"> article</span><span class=\"pun\">,</span><span class=\"typ\">Integer</span><span class=\"pln\"> page</span><span class=\"pun\">,</span><span class=\"typ\">Integer</span><span class=\"pln\"> size</span><span class=\"pun\">,</span><span class=\"typ\">Boolean</span><span class=\"pln\"> isDelete</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L5\"><code></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"lit\">@Select</span><span class=\"pun\">(</span><span class=\"str\">\"select * from article where id=#{id} and user_id=#{userId} and status&lt;&gt;4\"</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"typ\">Article</span><span class=\"pln\"> selectUserBlogById</span><span class=\"pun\">(</span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"id\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pln\"> id</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"userId\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pln\"> userId</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L8\"><code></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"lit\">@Update</span><span class=\"pun\">(</span><span class=\"str\">\"update article set status=4 where id=#{id}\"</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"kwd\">int</span><span class=\"pln\"> deleteBlog</span><span class=\"pun\">(</span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"id\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pln\"> id</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L1\"><code></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"lit\">@Select</span><span class=\"pun\">(</span><span class=\"str\">\"select * from article where id=#{id} and user_id=#{userId} and status=4\"</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"typ\">Article</span><span class=\"pln\"> selectUserDeleteBlogById</span><span class=\"pun\">(</span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"id\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pln\"> id</span><span class=\"pun\">,</span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"userId\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pln\"> userId</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L4\"><code></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"lit\">@Delete</span><span class=\"pun\">(</span><span class=\"str\">\"delete from article where id=#{id}\"</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"kwd\">int</span><span class=\"pln\"> removeBlog</span><span class=\"pun\">(</span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"id\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pln\"> id</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L7\"><code></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">//不能恢复被锁定的博客</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"lit\">@Update</span><span class=\"pun\">(</span><span class=\"str\">\"update article set status =1 where id=#{id} and status=4\"</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"kwd\">int</span><span class=\"pln\"> recoveryBlog</span><span class=\"pun\">(</span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"id\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pln\"> id</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L1\"><code></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"lit\">@Select</span><span class=\"pun\">(</span><span class=\"str\">\"SELECT article.*,category.`name` as typeName,sys_user.nickname as userName,sys_user.face from article \"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"str\">\"left join category \"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">            </span><span class=\"str\">\"on category.id=article.type \"</span><span class=\"pun\">+</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">            </span><span class=\"str\">\"left join sys_user \"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"str\">\"on sys_user.id=article.user_id \"</span><span class=\"pln\"> </span><span class=\"pun\">+</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"str\">\"where article.url=#{url}\"</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"typ\">DetailedArticle</span><span class=\"pln\"> selectArticleByUrl</span><span class=\"pun\">(</span><span class=\"lit\">@BindParam</span><span class=\"pun\">(</span><span class=\"str\">\"url\"</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> url</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L9\"><code><span class=\"pun\">}</span></code></li>\n  </ol></pre>\n</body>', 'var index = parent.layer.getFrameIndex(window.name); //先得到当前iframe层的索引\nparent.layer.close(index); //再执行关闭   ', '牛逼plus', '', 1, NULL, '你好世界！', NULL, 'b130f361a2204d5497730c94078dfc7d', 2, 7, 2, 1607959546948, '你好世界\nhello word!\n```\npackage cn.gjy.blog.dao;\n\nimport cn.gjy.blog.dao.method.BlogMethodSql;\nimport cn.gjy.blog.dao.method.CategoryMethodSql;\nimport cn.gjy.blog.framework.Invocation.DaoInvocationHandlerImpl;\nimport cn.gjy.blog.framework.annotation.*;\nimport cn.gjy.blog.model.Article;\nimport cn.gjy.blog.model.Category;\nimport cn.gjy.blog.model.DetailedArticle;\n\nimport java.util.List;\n\n/**\n * @Author gujianyang\n * @Date 2020/12/10\n * @Class BlogDao\n */\n@Dao\npublic interface BlogDao {\n\n    @Insert(\"INSERT INTO `blog`.`article` (  `create_time`,  `update_time`,  `comment`,  `content`,  \" +\n            \"`description`,  `keywords`,  `password`,  `status`,  `thumb`,  `title`,  `top_priority`,  `url`, \" +\n            \" `type`,  `publicity_level`,  `user_id`,time_stamp,markdown   )  \" +\n            \"VALUES  (  #{create_time},  #{update_time},  #{comment},  #{content},  \" +\n            \"#{description},  #{keywords},  #{password},  #{status},  #{thumb},  #{title},  #{top_priority}, \" +\n            \" #{url},  #{type},  #{publicity_level},  #{user_id} ,#{time_stamp},#{markdown}  );\")\n    int releaseNewBlog(Article article);\n\n    @UseCustomMethod(value = CategoryMethodSql.CategoryCountMethod.class,\n            sqlType = DaoInvocationHandlerImpl.SqlType.SELECT)\n    int getUserBlogCategoriesCount(Category category);\n\n    @UseCustomMethod(value = CategoryMethodSql.CategoryDataMethod.class,\n            sqlType = DaoInvocationHandlerImpl.SqlType.SELECT)\n    List<Category> getUserBlogCategories(Category category,Integer page,Integer pageSize);\n\n    @Select(\"select count(*) from category where name=#{name} and create_user=#{userId}\")\n    int selectUserCategoryByName(@BindParam(\"name\") String name,@BindParam(\"userId\") Integer userId);\n\n    @Insert(\"INSERT INTO category (  `name`, `lock`, `description`, `create_time`, `create_user`,  `time_stamp` )\\n\" +\n            \"VALUES\\n\" +\n            \"\\t(  #{name}, #{lock}, #{description}, #{create_time}, #{create_user}, #{time_stamp} );\")\n    int addNewCategory(Category category);\n\n    @Select(\"select* from article where user_id=#{id} \" +\n            \"and status<>4 and status<>2 \" +\n            \"order by id desc limit #{start},#{end}\")\n    List<Article> selectUserBlogs(@BindParam(\"id\") Integer id,@BindParam(\"start\") int s,@BindParam(\"end\") int e);\n\n    @Select(\"select * from category where id=#{id} and create_user=#{userId}\")\n    Category selectUserCategoryById(@BindParam(\"id\") Integer id,@BindParam(\"userId\") Integer userId);\n\n    @Select(\"select count(*) from article where type=#{type}\")\n    int getBlogCountByCategory(@BindParam(\"type\") Integer id);\n\n    @Delete(\"delete from category where id=#{id}\")\n    int deleteCategoryById(@BindParam(\"id\") Integer id);\n\n    @Update(\"update article set type=null where type=#{type};\")\n    int resetBlogsCategoryByCategoryId(@BindParam(\"type\") Integer id);\n\n    @Update(\"update category set name=#{name},category.lock=#{lock},description=#{description},\" +\n            \"update_time=#{update_time} where id=#{id};\")\n    int updateCategory(Category category);\n\n    @Update(\"update category set category.lock=#{lock} where id=#{id};\")\n    int updateCategoryLock(@BindParam(\"id\") Integer id,@BindParam(\"lock\") Integer lock);\n\n    @UseCustomMethod(value = BlogMethodSql.BlogCountMethod.class,\n            sqlType = DaoInvocationHandlerImpl.SqlType.SELECT)\n    int selectUserBlogsCount(Article article,Boolean isDelete);\n\n    @UseCustomMethod(value = BlogMethodSql.BlogDataMethod.class,\n            sqlType = DaoInvocationHandlerImpl.SqlType.SELECT)\n    List<DetailedArticle> selectUserBlogsByArgs(Article article,Integer page,Integer size,Boolean isDelete);\n\n    @Select(\"select * from article where id=#{id} and user_id=#{userId} and status<>4\")\n    Article selectUserBlogById(@BindParam(\"id\") Integer id, @BindParam(\"userId\") Integer userId);\n\n    @Update(\"update article set status=4 where id=#{id}\")\n    int deleteBlog(@BindParam(\"id\") Integer id);\n\n    @Select(\"select * from article where id=#{id} and user_id=#{userId} and status=4\")\n    Article selectUserDeleteBlogById(@BindParam(\"id\") Integer id,@BindParam(\"userId\") Integer userId);\n\n    @Delete(\"delete from article where id=#{id}\")\n    int removeBlog(@BindParam(\"id\") Integer id);\n\n    //不能恢复被锁定的博客\n    @Update(\"update article set status =1 where id=#{id} and status=4\")\n    int recoveryBlog(@BindParam(\"id\") Integer id);\n\n    @Select(\"SELECT article.*,category.`name` as typeName,sys_user.nickname as userName,sys_user.face from article \" +\n            \"left join category \" +\n            \"on category.id=article.type \"+\n            \"left join sys_user \" +\n            \"on sys_user.id=article.user_id \" +\n            \"where article.url=#{url}\")\n    DetailedArticle selectArticleByUrl(@BindParam(\"url\") String url);\n}\n```', 31);
INSERT INTO `article` VALUES (15, '2020-12-15 22:54:50', NULL, 1, '<body>\n <p>瑟吉欧送就嗖嗖瑟吉欧送瑟吉欧送<br>可搜索口水鸡<br>瑟吉欧送脚手架 建瓯市就欧式就哦酒叟接收酒叟计算建瓯市就欧式就偶数计算j</p> \n</body>', '私密博客', '无', '', 1, NULL, '私密的博客测试', NULL, '9dc1eabcf9294c129f04e1f740c3c3ad', 27, 5, 2, 1608044090431, '瑟吉欧送就嗖嗖瑟吉欧送瑟吉欧送\n可搜索口水鸡\n瑟吉欧送脚手架 建瓯市就欧式就哦酒叟接收酒叟计算建瓯市就欧式就偶数计算j', 6);
INSERT INTO `article` VALUES (16, '2020-12-20 01:07:38', NULL, 1, '<body>\n <h4 id=\"h4--\"><a name=\"废话不多说，直接开干！\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>废话不多说，直接开干！</h4>\n <p>众所周知，在java中，反射就是可以为所欲为！<br>那么我们要实现一个orm框架就要用到它！</p> \n <h4 id=\"h4--\"><a name=\"第一步：代理这个持久层对象\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>第一步：代理这个持久层对象</h4>\n <p>这里采用jdk的动态代理，为持久层创建一个动态进行处理的对象</p> \n <pre class=\"prettyprint linenums prettyprinted\" style=\"\">\n  <ol class=\"linenums\">\n   <li class=\"L0\"><code><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">DaoInvocationHandlerImpl</span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"kwd\">implements</span><span class=\"pln\"> </span><span class=\"typ\">InvocationHandler</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">//用来接管具体的操作</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">Object</span><span class=\"pln\"> invoke</span><span class=\"pun\">(</span><span class=\"typ\">Object</span><span class=\"pln\"> proxy</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Method</span><span class=\"pln\"> method</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Object</span><span class=\"pun\">[]</span><span class=\"pln\"> args</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">Throwable</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">null</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L6\"><code><span class=\"pun\">}</span></code></li>\n  </ol></pre>\n <p>需要注意的是：jdk的动态代理的代理对象必须要是一个接口。</p> \n <p>接下来就是模仿mybatis的创建几个curd的注解，<a href=\"https://github.com/Select\" title=\"@Select\" class=\"at-link\">@Select</a>，<a href=\"https://github.com/Insert\" title=\"@Insert\" class=\"at-link\">@Insert</a>，<a href=\"https://github.com/Update\" title=\"@Update\" class=\"at-link\">@Update</a>，<a href=\"https://github.com/Delete\" title=\"@Delete\" class=\"at-link\">@Delete</a> 。<br>我们用注解来装载我们的sql语句。</p> \n <pre class=\"prettyprint linenums prettyprinted\" style=\"\">\n  <ol class=\"linenums\">\n   <li class=\"L0\"><code><span class=\"lit\">@Retention</span><span class=\"pun\">(</span><span class=\"typ\">RetentionPolicy</span><span class=\"pun\">.</span><span class=\"pln\">RUNTIME</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L1\"><code><span class=\"lit\">@Target</span><span class=\"pun\">({</span><span class=\"typ\">ElementType</span><span class=\"pun\">.</span><span class=\"pln\">METHOD</span><span class=\"pun\">})</span></code></li>\n   <li class=\"L2\"><code><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"lit\">@interface</span><span class=\"pln\"> </span><span class=\"typ\">Select</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"typ\">String</span><span class=\"pln\"> value</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L4\"><code><span class=\"pun\">}</span></code></li>\n   <li class=\"L5\"><code></code></li>\n   <li class=\"L6\"><code><span class=\"lit\">@Retention</span><span class=\"pun\">(</span><span class=\"typ\">RetentionPolicy</span><span class=\"pun\">.</span><span class=\"pln\">RUNTIME</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L7\"><code><span class=\"lit\">@Target</span><span class=\"pun\">({</span><span class=\"typ\">ElementType</span><span class=\"pun\">.</span><span class=\"pln\">METHOD</span><span class=\"pun\">})</span></code></li>\n   <li class=\"L8\"><code><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"lit\">@interface</span><span class=\"pln\"> </span><span class=\"typ\">Insert</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"typ\">String</span><span class=\"pln\"> value</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L0\"><code><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code></code></li>\n   <li class=\"L2\"><code><span class=\"lit\">@Retention</span><span class=\"pun\">(</span><span class=\"typ\">RetentionPolicy</span><span class=\"pun\">.</span><span class=\"pln\">RUNTIME</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L3\"><code><span class=\"lit\">@Target</span><span class=\"pun\">({</span><span class=\"typ\">ElementType</span><span class=\"pun\">.</span><span class=\"pln\">METHOD</span><span class=\"pun\">})</span></code></li>\n   <li class=\"L4\"><code><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"lit\">@interface</span><span class=\"pln\"> </span><span class=\"typ\">Update</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"typ\">String</span><span class=\"pln\"> value</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L6\"><code><span class=\"pun\">}</span></code></li>\n   <li class=\"L7\"><code></code></li>\n   <li class=\"L8\"><code><span class=\"lit\">@Retention</span><span class=\"pun\">(</span><span class=\"typ\">RetentionPolicy</span><span class=\"pun\">.</span><span class=\"pln\">RUNTIME</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L9\"><code><span class=\"lit\">@Target</span><span class=\"pun\">({</span><span class=\"typ\">ElementType</span><span class=\"pun\">.</span><span class=\"pln\">METHOD</span><span class=\"pun\">})</span></code></li>\n   <li class=\"L0\"><code><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"lit\">@interface</span><span class=\"pln\"> </span><span class=\"typ\">Delete</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"typ\">String</span><span class=\"pln\"> value</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L2\"><code><span class=\"pun\">}</span></code></li>\n  </ol></pre>\n <p>ok，准备工作完毕。</p> \n <h4 id=\"h4--\"><a name=\"第二步：解析持久层的接口方法\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>第二步：解析持久层的接口方法</h4>\n <p>由于反射的效率相对于直接调用方法，效率不高，所以在类初始化的时候，对这个类的方法，参数列表等信息，进行缓存，此处使用HashMap来进行缓存，因为put操作只在初始化类的时候进行，在运行期间不会有put操作，所以使用线程不安全HashMap。因此，方法名不能重复。</p> \n <pre class=\"prettyprint linenums prettyprinted\" style=\"\">\n  <ol class=\"linenums\">\n   <li class=\"L0\"><code><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> init</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">InstantiationException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">IllegalAccessException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"typ\">Set</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;</span><span class=\"pln\"> methodNameSet</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashSet</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">bindValueInfoMap</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashMap</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"typ\">Method</span><span class=\"pun\">[]</span><span class=\"pln\"> methods </span><span class=\"pun\">=</span><span class=\"pln\"> proxyInterface</span><span class=\"pun\">.</span><span class=\"pln\">getMethods</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> i </span><span class=\"pun\">&lt;</span><span class=\"pln\"> methods</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">methodNameSet</span><span class=\"pun\">.</span><span class=\"pln\">contains</span><span class=\"pun\">(</span><span class=\"pln\">methods</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getName</span><span class=\"pun\">())){</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                log</span><span class=\"pun\">.</span><span class=\"pln\">e</span><span class=\"pun\">(</span><span class=\"pln\">proxyInterface</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">()+</span><span class=\"str\">\" 方法名重复:\"</span><span class=\"pun\">+</span><span class=\"pln\">methods</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getName</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"dao 的方法名不能重复\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">            methodNameSet</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"pln\">proxyInterface</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">methods</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">Insert</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">)!=</span><span class=\"kwd\">null</span><span class=\"pun\">||</span><span class=\"pln\">methods</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">Update</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">)!=</span><span class=\"kwd\">null</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"pun\">||</span><span class=\"pln\">methods</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">Delete</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">)!=</span><span class=\"kwd\">null</span><span class=\"pun\">||</span><span class=\"pln\">methods</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">Select</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">)!=</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">bindValueInfoMap</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">methods</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"pln\">createBindInfo</span><span class=\"pun\">(</span><span class=\"pln\">methods</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]));</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pun\">{</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                log</span><span class=\"pun\">.</span><span class=\"pln\">e</span><span class=\"pun\">(</span><span class=\"pln\">proxyInterface</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">()+</span><span class=\"str\">\" 方法名没有sql:\"</span><span class=\"pun\">+</span><span class=\"pln\">methods</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getName</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"数据层接口方法必须有select,update,delete或insert注解\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n  </ol></pre>\n <p>检测完方法名和注解后，就是对于这个方法注解中的sql的参数来进行一对一的映射了，同时将sql语句中的参数替换成？，对参数个数，合法性进行处理。</p> \n <pre class=\"prettyprint linenums prettyprinted\" style=\"\">\n  <ol class=\"linenums\">\n   <li class=\"L0\"><code><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">DaoBindValueInfo</span><span class=\"pln\"> createBindInfo</span><span class=\"pun\">(</span><span class=\"typ\">Method</span><span class=\"pln\"> method</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">IllegalAccessException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">InstantiationException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"typ\">Annotation</span><span class=\"pun\">[]</span><span class=\"pln\"> annotations</span><span class=\"pun\">={</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">Insert</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">),</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                method</span><span class=\"pun\">.</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">Update</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">),</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                method</span><span class=\"pun\">.</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">Select</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">),</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                method</span><span class=\"pun\">.</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">Delete</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">)};</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"typ\">String</span><span class=\"pln\"> sql</span><span class=\"pun\">=</span><span class=\"kwd\">null</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">int</span><span class=\"pln\"> count</span><span class=\"pun\">=</span><span class=\"lit\">0</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">Annotation</span><span class=\"pln\"> annotation </span><span class=\"pun\">:</span><span class=\"pln\"> annotations</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">annotation</span><span class=\"pun\">!=</span><span class=\"kwd\">null</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                count</span><span class=\"pun\">++;</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">count</span><span class=\"pun\">&gt;</span><span class=\"lit\">1</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"select,update,delete或insert注解不能共存\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">annotations</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">]!=</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">            sql</span><span class=\"pun\">=((</span><span class=\"typ\">Insert</span><span class=\"pun\">)</span><span class=\"pln\">annotations</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">]).</span><span class=\"pln\">value</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">            methodSqlType</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"typ\">SqlType</span><span class=\"pun\">.</span><span class=\"pln\">INSERT</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">annotations</span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">]!=</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">            sql</span><span class=\"pun\">=((</span><span class=\"typ\">Update</span><span class=\"pun\">)</span><span class=\"pln\">annotations</span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">]).</span><span class=\"pln\">value</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">            methodSqlType</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"typ\">SqlType</span><span class=\"pun\">.</span><span class=\"pln\">UPDATE</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">annotations</span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">]!=</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">            sql</span><span class=\"pun\">=((</span><span class=\"typ\">Select</span><span class=\"pun\">)</span><span class=\"pln\">annotations</span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">]).</span><span class=\"pln\">value</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            methodSqlType</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"typ\">SqlType</span><span class=\"pun\">.</span><span class=\"pln\">SELECT</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">annotations</span><span class=\"pun\">[</span><span class=\"lit\">3</span><span class=\"pun\">]!=</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">            sql</span><span class=\"pun\">=((</span><span class=\"typ\">Delete</span><span class=\"pun\">)</span><span class=\"pln\">annotations</span><span class=\"pun\">[</span><span class=\"lit\">3</span><span class=\"pun\">]).</span><span class=\"pln\">value</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">            methodSqlType</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"typ\">SqlType</span><span class=\"pun\">.</span><span class=\"pln\">DELETE</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">sql</span><span class=\"pun\">==</span><span class=\"kwd\">null</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">            </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"sql 不能为空! at:\"</span><span class=\"pun\">+</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"typ\">Matcher</span><span class=\"pln\"> matcher</span><span class=\"pun\">=</span><span class=\"pln\">pattern</span><span class=\"pun\">.</span><span class=\"pln\">matcher</span><span class=\"pun\">(</span><span class=\"pln\">sql</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"typ\">String</span><span class=\"pln\"> key</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"typ\">Set</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"kwd\">params</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashSet</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;</span><span class=\"pln\"> keys</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">ArrayList</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">while</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">matcher</span><span class=\"pun\">.</span><span class=\"pln\">find</span><span class=\"pun\">())</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">            key</span><span class=\"pun\">=</span><span class=\"pln\">matcher</span><span class=\"pun\">.</span><span class=\"kwd\">group</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">).</span><span class=\"pln\">trim</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"kwd\">params</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"pln\">key</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">            keys</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"pln\">key</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L0\"><code><span class=\"com\">//        Class&lt;?&gt;[] parameterTypes = method.getParameterTypes();</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"typ\">Parameter</span><span class=\"pun\">[]</span><span class=\"pln\"> parameters </span><span class=\"pun\">=</span><span class=\"pln\"> method</span><span class=\"pun\">.</span><span class=\"pln\">getParameters</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"typ\">DaoBindValueInfo</span><span class=\"pln\"> bindValueInfo</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">DaoBindValueInfo</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">isObject</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashMap</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">fieldMap</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashMap</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">objectIndex</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashMap</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">keys</span><span class=\"pun\">=</span><span class=\"pln\">keys</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"typ\">Set</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;</span><span class=\"pln\"> argsParam</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashSet</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"typ\">Alias</span><span class=\"pln\"> </span><span class=\"kwd\">alias</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"typ\">String</span><span class=\"pln\"> fieldName</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> i </span><span class=\"pun\">&lt;</span><span class=\"pln\"> parameters</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">getBasicDataClassSet</span><span class=\"pun\">().</span><span class=\"pln\">contains</span><span class=\"pun\">(</span><span class=\"pln\">parameters</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getType</span><span class=\"pun\">())){</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                </span><span class=\"typ\">BindParam</span><span class=\"pln\"> bindParam</span><span class=\"pun\">=</span><span class=\"pln\">parameters</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">BindParam</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">bindParam</span><span class=\"pun\">==</span><span class=\"kwd\">null</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                    </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"基础数据需要有@BindParam注解来绑定\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(!</span><span class=\"kwd\">params</span><span class=\"pun\">.</span><span class=\"pln\">contains</span><span class=\"pun\">(</span><span class=\"pln\">bindParam</span><span class=\"pun\">.</span><span class=\"pln\">value</span><span class=\"pun\">()))</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                    </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"sql中无此参数!\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">isObject</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">bindParam</span><span class=\"pun\">.</span><span class=\"pln\">value</span><span class=\"pun\">(),</span><span class=\"kwd\">true</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">objectIndex</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">bindParam</span><span class=\"pun\">.</span><span class=\"pln\">value</span><span class=\"pun\">(),</span><span class=\"pln\">i</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">argsParam</span><span class=\"pun\">.</span><span class=\"pln\">contains</span><span class=\"pun\">(</span><span class=\"pln\">bindParam</span><span class=\"pun\">.</span><span class=\"pln\">value</span><span class=\"pun\">()))</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                    </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"参数重复\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                argsParam</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"pln\">bindParam</span><span class=\"pun\">.</span><span class=\"pln\">value</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                </span><span class=\"typ\">Field</span><span class=\"pun\">[]</span><span class=\"pln\"> fields </span><span class=\"pun\">=</span><span class=\"pln\"> parameters</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getType</span><span class=\"pun\">().</span><span class=\"pln\">getDeclaredFields</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">Field</span><span class=\"pln\"> field </span><span class=\"pun\">:</span><span class=\"pln\"> fields</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                    </span><span class=\"kwd\">if</span><span class=\"pun\">((</span><span class=\"kwd\">alias</span><span class=\"pun\">=</span><span class=\"pln\">field</span><span class=\"pun\">.</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">Alias</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">))!=</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                        fieldName</span><span class=\"pun\">=</span><span class=\"kwd\">alias</span><span class=\"pun\">.</span><span class=\"pln\">value</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                        fieldName</span><span class=\"pun\">=</span><span class=\"pln\">field</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                    </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"kwd\">params</span><span class=\"pun\">.</span><span class=\"pln\">contains</span><span class=\"pun\">(</span><span class=\"pln\">fieldName</span><span class=\"pun\">)){</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                        bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">isObject</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">fieldName</span><span class=\"pun\">,</span><span class=\"kwd\">false</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                        bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">objectIndex</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">fieldName</span><span class=\"pun\">,</span><span class=\"pln\">i</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                        bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">fieldMap</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">fieldName</span><span class=\"pun\">,</span><span class=\"pln\">field</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">argsParam</span><span class=\"pun\">.</span><span class=\"pln\">contains</span><span class=\"pun\">(</span><span class=\"pln\">fieldName</span><span class=\"pun\">))</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                            </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"参数重复\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                        argsParam</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"pln\">fieldName</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"com\">//System.out.println(sql.replaceAll(\"#\\\\{(.+?)\\\\}\",\"?\"));</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">sqlMap</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"pln\">sql</span><span class=\"pun\">.</span><span class=\"pln\">replaceAll</span><span class=\"pun\">(</span><span class=\"str\">\"#\\\\{(.+?)\\\\}\"</span><span class=\"pun\">,</span><span class=\"str\">\"?\"</span><span class=\"pun\">));</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"typ\">String</span><span class=\"pln\"> param</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> i </span><span class=\"pun\">&lt;</span><span class=\"pln\"> bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">keys</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">();</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">            param</span><span class=\"pun\">=</span><span class=\"pln\">bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">keys</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"kwd\">try</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">isObject</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">param</span><span class=\"pun\">)){</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                    log</span><span class=\"pun\">.</span><span class=\"pln\">d</span><span class=\"pun\">(</span><span class=\"pln\">param </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\"  是对象 args下标\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">objectIndex</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">param</span><span class=\"pun\">));</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                    log</span><span class=\"pun\">.</span><span class=\"pln\">d</span><span class=\"pun\">(</span><span class=\"pln\">param </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\"  是字段 args下标\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">objectIndex</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">param</span><span class=\"pun\">)+</span><span class=\"str\">\" field:\"</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                            </span><span class=\"pun\">+</span><span class=\"pln\">bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">fieldMap</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">param</span><span class=\"pun\">));</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"kwd\">catch</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">Exception</span><span class=\"pln\"> e</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"pln\">param</span><span class=\"pun\">+</span><span class=\"str\">\" 没有找到匹配的字段\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"kwd\">params</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">()==</span><span class=\"pln\">argsParam</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">())</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> bindValueInfo</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"kwd\">else</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"参数不匹配\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n  </ol></pre>\n <p>经过上面的处理，一个简单的参数映射就完成了。</p> \n <h4 id=\"h4--sql-\"><a name=\"第三步：执行sql并封装结果\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>第三步：执行sql并封装结果</h4>\n <p>在第一步和第二步中，程序已经将sql和参数处理完毕，接下来要做的就是对数据库返回的结果集进行操作，这里使用反射来获取返回值。<br>对于updete delete insert 等，只需要返回或不返回影响条数<br>对于select的就比较麻烦了。<br>这就留给下次详细描述<br>以下是代理类完整代码</p> \n <pre class=\"prettyprint linenums prettyprinted\" style=\"\">\n  <ol class=\"linenums\">\n   <li class=\"L0\"><code><span class=\"kwd\">package</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">framework</span><span class=\"pun\">.</span><span class=\"typ\">Invocation</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L1\"><code></code></li>\n   <li class=\"L2\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">framework</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.*;</span></code></li>\n   <li class=\"L3\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">framework</span><span class=\"pun\">.</span><span class=\"pln\">config</span><span class=\"pun\">.</span><span class=\"typ\">FrameworkConfig</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L4\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">framework</span><span class=\"pun\">.</span><span class=\"pln\">database</span><span class=\"pun\">.</span><span class=\"typ\">BeanAssignment</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L5\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">framework</span><span class=\"pun\">.</span><span class=\"pln\">database</span><span class=\"pun\">.</span><span class=\"typ\">ConnectionHolder</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L6\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">framework</span><span class=\"pun\">.</span><span class=\"pln\">database</span><span class=\"pun\">.</span><span class=\"typ\">ConnectionUtil</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L7\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">framework</span><span class=\"pun\">.</span><span class=\"pln\">database</span><span class=\"pun\">.</span><span class=\"typ\">CurdTool</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L8\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">framework</span><span class=\"pun\">.</span><span class=\"pln\">factory</span><span class=\"pun\">.</span><span class=\"pln\">impl</span><span class=\"pun\">.</span><span class=\"typ\">ObjectFactory</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L9\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">framework</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">.</span><span class=\"typ\">SimpleLog</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L0\"><code></code></li>\n   <li class=\"L1\"><code><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">lang</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Annotation</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L2\"><code><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">lang</span><span class=\"pun\">.</span><span class=\"pln\">reflect</span><span class=\"pun\">.*;</span></code></li>\n   <li class=\"L3\"><code><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.*;</span></code></li>\n   <li class=\"L4\"><code><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"pln\">regex</span><span class=\"pun\">.</span><span class=\"typ\">Matcher</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L5\"><code><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"pln\">regex</span><span class=\"pun\">.</span><span class=\"typ\">Pattern</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L6\"><code></code></li>\n   <li class=\"L7\"><code><span class=\"com\">/**</span></code></li>\n   <li class=\"L8\"><code><span class=\"com\"> * @author gujianyang</span></code></li>\n   <li class=\"L9\"><code><span class=\"com\"> * @date 2020/11/27</span></code></li>\n   <li class=\"L0\"><code><span class=\"com\"> */</span></code></li>\n   <li class=\"L1\"><code><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">DaoInvocationHandlerImpl</span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"kwd\">implements</span><span class=\"pln\"> </span><span class=\"typ\">InvocationHandler</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">final</span><span class=\"pln\"> </span><span class=\"typ\">SimpleLog</span><span class=\"pln\"> log</span><span class=\"pun\">=</span><span class=\"typ\">SimpleLog</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"typ\">DaoInvocationHandlerImpl</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L3\"><code></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">final</span><span class=\"pln\"> </span><span class=\"typ\">Class</span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> proxyInterface</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L5\"><code></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">Map</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"typ\">DaoBindValueInfo</span><span class=\"pun\">&gt;</span><span class=\"pln\"> bindValueInfoMap</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L7\"><code></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">final</span><span class=\"pln\"> </span><span class=\"typ\">Map</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"typ\">String</span><span class=\"pun\">&gt;</span><span class=\"pln\"> sqlMap</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashMap</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L9\"><code></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">final</span><span class=\"pln\"> </span><span class=\"typ\">Map</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"typ\">Class</span><span class=\"pun\">&lt;?&gt;&gt;</span><span class=\"pln\"> classCache</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashMap</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L1\"><code></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">final</span><span class=\"pln\"> </span><span class=\"typ\">Map</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"typ\">SqlType</span><span class=\"pun\">&gt;</span><span class=\"pln\"> methodSqlType</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashMap</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L3\"><code></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">final</span><span class=\"pln\"> </span><span class=\"typ\">Map</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"typ\">CusMethodSql</span><span class=\"pun\">&gt;</span><span class=\"pln\"> cusMethodSqlMap</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashMap</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L5\"><code></code></li>\n   <li class=\"L6\"><code></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">DaoInvocationHandlerImpl</span><span class=\"pun\">(</span><span class=\"typ\">Class</span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> proxyInterface</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">IllegalAccessException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">InstantiationException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">proxyInterface</span><span class=\"pun\">=</span><span class=\"pln\">proxyInterface</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">        init</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> init</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">InstantiationException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">IllegalAccessException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"typ\">Set</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;</span><span class=\"pln\"> methodNameSet</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashSet</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">bindValueInfoMap</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashMap</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"typ\">Method</span><span class=\"pun\">[]</span><span class=\"pln\"> methods </span><span class=\"pun\">=</span><span class=\"pln\"> proxyInterface</span><span class=\"pun\">.</span><span class=\"pln\">getMethods</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> i </span><span class=\"pun\">&lt;</span><span class=\"pln\"> methods</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">methodNameSet</span><span class=\"pun\">.</span><span class=\"pln\">contains</span><span class=\"pun\">(</span><span class=\"pln\">methods</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getName</span><span class=\"pun\">())){</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                log</span><span class=\"pun\">.</span><span class=\"pln\">e</span><span class=\"pun\">(</span><span class=\"pln\">proxyInterface</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">()+</span><span class=\"str\">\" 方法名重复:\"</span><span class=\"pun\">+</span><span class=\"pln\">methods</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getName</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"dao 的方法名不能重复\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">            methodNameSet</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"pln\">proxyInterface</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">methods</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">Insert</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">)!=</span><span class=\"kwd\">null</span><span class=\"pun\">||</span><span class=\"pln\">methods</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">Update</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">)!=</span><span class=\"kwd\">null</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"pun\">||</span><span class=\"pln\">methods</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">Delete</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">)!=</span><span class=\"kwd\">null</span><span class=\"pun\">||</span><span class=\"pln\">methods</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">Select</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">)!=</span><span class=\"kwd\">null</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">            </span><span class=\"pun\">||</span><span class=\"pln\">methods</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">UseCustomMethod</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">)!=</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">bindValueInfoMap</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">methods</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"pln\">createBindInfo</span><span class=\"pun\">(</span><span class=\"pln\">methods</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]));</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pun\">{</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                log</span><span class=\"pun\">.</span><span class=\"pln\">e</span><span class=\"pun\">(</span><span class=\"pln\">proxyInterface</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">()+</span><span class=\"str\">\" 方法名没有sql:\"</span><span class=\"pun\">+</span><span class=\"pln\">methods</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getName</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"数据层接口方法必须有select,update,delete或insert注解\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L2\"><code></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">final</span><span class=\"pln\"> </span><span class=\"typ\">Pattern</span><span class=\"pln\"> pattern</span><span class=\"pun\">=</span><span class=\"typ\">Pattern</span><span class=\"pun\">.</span><span class=\"pln\">compile</span><span class=\"pun\">(</span><span class=\"str\">\"#\\\\{(.+?)\\\\}\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L4\"><code></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">DaoBindValueInfo</span><span class=\"pln\"> createBindInfo</span><span class=\"pun\">(</span><span class=\"typ\">Method</span><span class=\"pln\"> method</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">IllegalAccessException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">InstantiationException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">UseCustomMethod</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">)!=</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"typ\">UseCustomMethod</span><span class=\"pln\"> useCustomMethod</span><span class=\"pun\">=</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">UseCustomMethod</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">            </span><span class=\"typ\">CusMethodSql</span><span class=\"pln\"> cusMethodSql </span><span class=\"pun\">=</span><span class=\"pln\"> useCustomMethod</span><span class=\"pun\">.</span><span class=\"pln\">value</span><span class=\"pun\">().</span><span class=\"pln\">newInstance</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">            cusMethodSqlMap</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"pln\">cusMethodSql</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">            methodSqlType</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"pln\">useCustomMethod</span><span class=\"pun\">.</span><span class=\"pln\">sqlType</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">null</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"typ\">Annotation</span><span class=\"pun\">[]</span><span class=\"pln\"> annotations</span><span class=\"pun\">={</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">Insert</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">),</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                method</span><span class=\"pun\">.</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">Update</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">),</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                method</span><span class=\"pun\">.</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">Select</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">),</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                method</span><span class=\"pun\">.</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">Delete</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">)};</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"typ\">String</span><span class=\"pln\"> sql</span><span class=\"pun\">=</span><span class=\"kwd\">null</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">int</span><span class=\"pln\"> count</span><span class=\"pun\">=</span><span class=\"lit\">0</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">Annotation</span><span class=\"pln\"> annotation </span><span class=\"pun\">:</span><span class=\"pln\"> annotations</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">annotation</span><span class=\"pun\">!=</span><span class=\"kwd\">null</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                count</span><span class=\"pun\">++;</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">count</span><span class=\"pun\">&gt;</span><span class=\"lit\">1</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">            </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"select,update,delete或insert注解不能共存\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">annotations</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">]!=</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">            sql</span><span class=\"pun\">=((</span><span class=\"typ\">Insert</span><span class=\"pun\">)</span><span class=\"pln\">annotations</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">]).</span><span class=\"pln\">value</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">            methodSqlType</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"typ\">SqlType</span><span class=\"pun\">.</span><span class=\"pln\">INSERT</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">annotations</span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">]!=</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">            sql</span><span class=\"pun\">=((</span><span class=\"typ\">Update</span><span class=\"pun\">)</span><span class=\"pln\">annotations</span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">]).</span><span class=\"pln\">value</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">            methodSqlType</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"typ\">SqlType</span><span class=\"pun\">.</span><span class=\"pln\">UPDATE</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">annotations</span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">]!=</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">            sql</span><span class=\"pun\">=((</span><span class=\"typ\">Select</span><span class=\"pun\">)</span><span class=\"pln\">annotations</span><span class=\"pun\">[</span><span class=\"lit\">2</span><span class=\"pun\">]).</span><span class=\"pln\">value</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">            methodSqlType</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"typ\">SqlType</span><span class=\"pun\">.</span><span class=\"pln\">SELECT</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">annotations</span><span class=\"pun\">[</span><span class=\"lit\">3</span><span class=\"pun\">]!=</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">            sql</span><span class=\"pun\">=((</span><span class=\"typ\">Delete</span><span class=\"pun\">)</span><span class=\"pln\">annotations</span><span class=\"pun\">[</span><span class=\"lit\">3</span><span class=\"pun\">]).</span><span class=\"pln\">value</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">            methodSqlType</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"typ\">SqlType</span><span class=\"pun\">.</span><span class=\"pln\">DELETE</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">sql</span><span class=\"pun\">==</span><span class=\"kwd\">null</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"sql 不能为空! at:\"</span><span class=\"pun\">+</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"typ\">Matcher</span><span class=\"pln\"> matcher</span><span class=\"pun\">=</span><span class=\"pln\">pattern</span><span class=\"pun\">.</span><span class=\"pln\">matcher</span><span class=\"pun\">(</span><span class=\"pln\">sql</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"typ\">String</span><span class=\"pln\"> key</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"typ\">Set</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"kwd\">params</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashSet</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;</span><span class=\"pln\"> keys</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">ArrayList</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"kwd\">while</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">matcher</span><span class=\"pun\">.</span><span class=\"pln\">find</span><span class=\"pun\">())</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">            key</span><span class=\"pun\">=</span><span class=\"pln\">matcher</span><span class=\"pun\">.</span><span class=\"kwd\">group</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">).</span><span class=\"pln\">trim</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">            </span><span class=\"kwd\">params</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"pln\">key</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">            keys</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"pln\">key</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L2\"><code><span class=\"com\">//        Class&lt;?&gt;[] parameterTypes = method.getParameterTypes();</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"typ\">Parameter</span><span class=\"pun\">[]</span><span class=\"pln\"> parameters </span><span class=\"pun\">=</span><span class=\"pln\"> method</span><span class=\"pun\">.</span><span class=\"pln\">getParameters</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"typ\">DaoBindValueInfo</span><span class=\"pln\"> bindValueInfo</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">DaoBindValueInfo</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">isObject</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashMap</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">fieldMap</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashMap</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">objectIndex</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashMap</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">        bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">keys</span><span class=\"pun\">=</span><span class=\"pln\">keys</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"typ\">Set</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;</span><span class=\"pln\"> argsParam</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashSet</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"typ\">Alias</span><span class=\"pln\"> </span><span class=\"kwd\">alias</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"typ\">String</span><span class=\"pln\"> fieldName</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> i </span><span class=\"pun\">&lt;</span><span class=\"pln\"> parameters</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">getBasicDataClassSet</span><span class=\"pun\">().</span><span class=\"pln\">contains</span><span class=\"pun\">(</span><span class=\"pln\">parameters</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getType</span><span class=\"pun\">())){</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                </span><span class=\"typ\">BindParam</span><span class=\"pln\"> bindParam</span><span class=\"pun\">=</span><span class=\"pln\">parameters</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">BindParam</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">bindParam</span><span class=\"pun\">==</span><span class=\"kwd\">null</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                    </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"基础数据需要有@BindParam注解来绑定\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(!</span><span class=\"kwd\">params</span><span class=\"pun\">.</span><span class=\"pln\">contains</span><span class=\"pun\">(</span><span class=\"pln\">bindParam</span><span class=\"pun\">.</span><span class=\"pln\">value</span><span class=\"pun\">()))</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                    </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"sql中无此参数!\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">isObject</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">bindParam</span><span class=\"pun\">.</span><span class=\"pln\">value</span><span class=\"pun\">(),</span><span class=\"kwd\">true</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">objectIndex</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">bindParam</span><span class=\"pun\">.</span><span class=\"pln\">value</span><span class=\"pun\">(),</span><span class=\"pln\">i</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">argsParam</span><span class=\"pun\">.</span><span class=\"pln\">contains</span><span class=\"pun\">(</span><span class=\"pln\">bindParam</span><span class=\"pun\">.</span><span class=\"pln\">value</span><span class=\"pun\">()))</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                    </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"参数重复\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                argsParam</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"pln\">bindParam</span><span class=\"pun\">.</span><span class=\"pln\">value</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                </span><span class=\"typ\">Field</span><span class=\"pun\">[]</span><span class=\"pln\"> fields </span><span class=\"pun\">=</span><span class=\"pln\"> parameters</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getType</span><span class=\"pun\">().</span><span class=\"pln\">getDeclaredFields</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">Field</span><span class=\"pln\"> field </span><span class=\"pun\">:</span><span class=\"pln\"> fields</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                    </span><span class=\"kwd\">if</span><span class=\"pun\">((</span><span class=\"kwd\">alias</span><span class=\"pun\">=</span><span class=\"pln\">field</span><span class=\"pun\">.</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">Alias</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">))!=</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                        fieldName</span><span class=\"pun\">=</span><span class=\"kwd\">alias</span><span class=\"pun\">.</span><span class=\"pln\">value</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                        fieldName</span><span class=\"pun\">=</span><span class=\"pln\">field</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                    </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"kwd\">params</span><span class=\"pun\">.</span><span class=\"pln\">contains</span><span class=\"pun\">(</span><span class=\"pln\">fieldName</span><span class=\"pun\">)){</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                        bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">isObject</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">fieldName</span><span class=\"pun\">,</span><span class=\"kwd\">false</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                        bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">objectIndex</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">fieldName</span><span class=\"pun\">,</span><span class=\"pln\">i</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                        bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">fieldMap</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">fieldName</span><span class=\"pun\">,</span><span class=\"pln\">field</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">argsParam</span><span class=\"pun\">.</span><span class=\"pln\">contains</span><span class=\"pun\">(</span><span class=\"pln\">fieldName</span><span class=\"pun\">))</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                            </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"参数重复\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                        argsParam</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"pln\">fieldName</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"com\">//System.out.println(sql.replaceAll(\"#\\\\{(.+?)\\\\}\",\"?\"));</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">this</span><span class=\"pun\">.</span><span class=\"pln\">sqlMap</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"pln\">sql</span><span class=\"pun\">.</span><span class=\"pln\">replaceAll</span><span class=\"pun\">(</span><span class=\"str\">\"#\\\\{(.+?)\\\\}\"</span><span class=\"pun\">,</span><span class=\"str\">\"?\"</span><span class=\"pun\">));</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"typ\">String</span><span class=\"pln\"> param</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> i </span><span class=\"pun\">&lt;</span><span class=\"pln\"> bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">keys</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">();</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">            param</span><span class=\"pun\">=</span><span class=\"pln\">bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">keys</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">            </span><span class=\"kwd\">try</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">isObject</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">param</span><span class=\"pun\">)){</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                    log</span><span class=\"pun\">.</span><span class=\"pln\">d</span><span class=\"pun\">(</span><span class=\"pln\">param </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\"  是对象 args下标\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">objectIndex</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">param</span><span class=\"pun\">));</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                    log</span><span class=\"pun\">.</span><span class=\"pln\">d</span><span class=\"pun\">(</span><span class=\"pln\">param </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\"  是字段 args下标\"</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">objectIndex</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">param</span><span class=\"pun\">)+</span><span class=\"str\">\" field:\"</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                            </span><span class=\"pun\">+</span><span class=\"pln\">bindValueInfo</span><span class=\"pun\">.</span><span class=\"pln\">fieldMap</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">param</span><span class=\"pun\">));</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"kwd\">catch</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">Exception</span><span class=\"pln\"> e</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"pln\">param</span><span class=\"pun\">+</span><span class=\"str\">\" 没有找到匹配的字段\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"kwd\">params</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">()==</span><span class=\"pln\">argsParam</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">())</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> bindValueInfo</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">else</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"参数不匹配\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L4\"><code></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">Set</span><span class=\"pun\">&lt;</span><span class=\"typ\">Class</span><span class=\"pun\">&lt;?&gt;&gt;</span><span class=\"pln\"> getBasicDataClassSet</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"typ\">BeanAssignment</span><span class=\"pun\">.</span><span class=\"pln\">getBasicDataClassSet</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L8\"><code></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"lit\">@Override</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"typ\">Object</span><span class=\"pln\"> invoke</span><span class=\"pun\">(</span><span class=\"typ\">Object</span><span class=\"pln\"> proxy</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Method</span><span class=\"pln\"> method</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Object</span><span class=\"pun\">[]</span><span class=\"pln\"> args</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">Throwable</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">Object</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">.</span><span class=\"pln\">equals</span><span class=\"pun\">(</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getDeclaringClass</span><span class=\"pun\">()))</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> method</span><span class=\"pun\">.</span><span class=\"pln\">invoke</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">,</span><span class=\"pln\">args</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"typ\">Object</span><span class=\"pln\"> returnValue</span><span class=\"pun\">=</span><span class=\"kwd\">null</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">boolean</span><span class=\"pln\"> needReleaseConnection</span><span class=\"pun\">=</span><span class=\"kwd\">false</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">try</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"typ\">ConnectionHolder</span><span class=\"pun\">.</span><span class=\"pln\">getConnection</span><span class=\"pun\">()==</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                needReleaseConnection</span><span class=\"pun\">=</span><span class=\"kwd\">true</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                </span><span class=\"typ\">ConnectionHolder</span><span class=\"pun\">.</span><span class=\"pln\">setConnection</span><span class=\"pun\">(</span><span class=\"typ\">ConnectionUtil</span><span class=\"pun\">.</span><span class=\"pln\">getConnection</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"typ\">SqlType</span><span class=\"pln\"> sqlType</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"typ\">DaoBindValueInfo</span><span class=\"pln\"> info</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"typ\">StringBuilder</span><span class=\"pln\"> sb</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">StringBuilder</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">            </span><span class=\"typ\">Object</span><span class=\"pun\">[]</span><span class=\"pln\"> sqlArgs</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">            </span><span class=\"typ\">String</span><span class=\"pln\"> sql</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">((</span><span class=\"pln\">info</span><span class=\"pun\">=</span><span class=\"pln\">bindValueInfoMap</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">()))!=</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                sql</span><span class=\"pun\">=</span><span class=\"pln\">sqlMap</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                log</span><span class=\"pun\">.</span><span class=\"pln\">v</span><span class=\"pun\">(</span><span class=\"str\">\"SQL           ===&gt;\"</span><span class=\"pun\">+</span><span class=\"pln\">  sql</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                </span><span class=\"typ\">String</span><span class=\"pln\"> param</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                sb</span><span class=\"pun\">.</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"str\">\"Param         ===&gt; \"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                sqlArgs</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Object</span><span class=\"pun\">[</span><span class=\"pln\">info</span><span class=\"pun\">.</span><span class=\"pln\">keys</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">()];</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\">l</span><span class=\"pun\">=</span><span class=\"pln\">info</span><span class=\"pun\">.</span><span class=\"pln\">keys</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">();</span><span class=\"pln\"> i </span><span class=\"pun\">&lt;</span><span class=\"pln\"> l</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                    param</span><span class=\"pun\">=</span><span class=\"pln\">info</span><span class=\"pun\">.</span><span class=\"pln\">keys</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                    </span><span class=\"kwd\">int</span><span class=\"pln\"> index </span><span class=\"pun\">=</span><span class=\"pln\"> info</span><span class=\"pun\">.</span><span class=\"pln\">objectIndex</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">param</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                    </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">!=</span><span class=\"lit\">0</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                        sb</span><span class=\"pun\">.</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"str\">\" , \"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                    </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">info</span><span class=\"pun\">.</span><span class=\"pln\">isObject</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">param</span><span class=\"pun\">)){</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                        sqlArgs</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]=</span><span class=\"pln\">args</span><span class=\"pun\">[</span><span class=\"pln\">index</span><span class=\"pun\">];</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                        </span><span class=\"typ\">Field</span><span class=\"pln\"> field </span><span class=\"pun\">=</span><span class=\"pln\"> info</span><span class=\"pun\">.</span><span class=\"pln\">fieldMap</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">param</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                        field</span><span class=\"pun\">.</span><span class=\"pln\">setAccessible</span><span class=\"pun\">(</span><span class=\"kwd\">true</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                        </span><span class=\"typ\">Object</span><span class=\"pln\"> o </span><span class=\"pun\">=</span><span class=\"pln\"> field</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">[</span><span class=\"pln\">index</span><span class=\"pun\">]);</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                        sqlArgs</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]=</span><span class=\"pln\">o</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                    sb</span><span class=\"pun\">.</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"pln\">sqlArgs</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]);</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                </span><span class=\"typ\">CusMethodSql</span><span class=\"pln\"> cusMethodSql </span><span class=\"pun\">=</span><span class=\"pln\"> cusMethodSqlMap</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                </span><span class=\"typ\">CusMethodSql</span><span class=\"pun\">.</span><span class=\"typ\">SqlAndArgs</span><span class=\"pln\"> handle </span><span class=\"pun\">=</span><span class=\"pln\"> cusMethodSql</span><span class=\"pun\">.</span><span class=\"pln\">handle</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                sqlArgs</span><span class=\"pun\">=</span><span class=\"pln\">handle</span><span class=\"pun\">.</span><span class=\"pln\">getArgs</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                sql</span><span class=\"pun\">=</span><span class=\"pln\">handle</span><span class=\"pun\">.</span><span class=\"pln\">getSql</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                log</span><span class=\"pun\">.</span><span class=\"pln\">v</span><span class=\"pun\">(</span><span class=\"str\">\"SQL           ===&gt;\"</span><span class=\"pun\">+</span><span class=\"pln\">  sql</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                sb</span><span class=\"pun\">.</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"str\">\"Param         ===&gt; \"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> i </span><span class=\"pun\">&lt;</span><span class=\"pln\"> handle</span><span class=\"pun\">.</span><span class=\"pln\">getArgs</span><span class=\"pun\">().</span><span class=\"pln\">length</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                    </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">!=</span><span class=\"lit\">0</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                        sb</span><span class=\"pun\">.</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"str\">\" , \"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                    sb</span><span class=\"pun\">.</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"pln\">handle</span><span class=\"pun\">.</span><span class=\"pln\">getArgs</span><span class=\"pun\">()[</span><span class=\"pln\">i</span><span class=\"pun\">]);</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">            log</span><span class=\"pun\">.</span><span class=\"pln\">v</span><span class=\"pun\">(</span><span class=\"pln\">sb</span><span class=\"pun\">.</span><span class=\"pln\">toString</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            sqlType </span><span class=\"pun\">=</span><span class=\"pln\"> methodSqlType</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">            </span><span class=\"typ\">Class</span><span class=\"pun\">&lt;?&gt;</span><span class=\"pln\"> returnType </span><span class=\"pun\">=</span><span class=\"pln\"> method</span><span class=\"pun\">.</span><span class=\"pln\">getReturnType</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">            log</span><span class=\"pun\">.</span><span class=\"pln\">v</span><span class=\"pun\">(</span><span class=\"str\">\"returnType    ====&gt;\"</span><span class=\"pun\">+</span><span class=\"pln\">returnType</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"kwd\">int</span><span class=\"pln\"> returnCount</span><span class=\"pun\">=</span><span class=\"lit\">0</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"kwd\">switch</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">sqlType</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                </span><span class=\"kwd\">case</span><span class=\"pln\"> DELETE</span><span class=\"pun\">:</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                </span><span class=\"kwd\">case</span><span class=\"pln\"> INSERT</span><span class=\"pun\">:</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                </span><span class=\"kwd\">case</span><span class=\"pln\"> UPDATE</span><span class=\"pun\">:</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                    </span><span class=\"typ\">Integer</span><span class=\"pln\"> count</span><span class=\"pun\">=</span><span class=\"typ\">CurdTool</span><span class=\"pun\">.</span><span class=\"pln\">update</span><span class=\"pun\">(</span><span class=\"pln\">  sql</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">ConnectionHolder</span><span class=\"pun\">.</span><span class=\"pln\">getConnection</span><span class=\"pun\">(),</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                            sqlArgs</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                    </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">returnType</span><span class=\"pun\">==</span><span class=\"typ\">Void</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">||</span><span class=\"pln\">returnType</span><span class=\"pun\">==</span><span class=\"kwd\">void</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                        log</span><span class=\"pun\">.</span><span class=\"pln\">v</span><span class=\"pun\">(</span><span class=\"str\">\"舍弃\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">returnType</span><span class=\"pun\">==</span><span class=\"typ\">Integer</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">||</span><span class=\"pln\">returnType</span><span class=\"pun\">==</span><span class=\"kwd\">int</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                        returnValue</span><span class=\"pun\">=</span><span class=\"pln\"> count</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">returnType</span><span class=\"pun\">==</span><span class=\"typ\">Long</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">||</span><span class=\"pln\">returnType</span><span class=\"pun\">==</span><span class=\"kwd\">long</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                        returnValue</span><span class=\"pun\">=</span><span class=\"pln\"> count</span><span class=\"pun\">.</span><span class=\"pln\">longValue</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span><span class=\"kwd\">else</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                        </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"DELETE,INSERT,UPDATE只能返回int,long,void,或其包装类型 at:\"</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                                </span><span class=\"pun\">+</span><span class=\"pln\">proxyInterface</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">()+</span><span class=\"str\">\".\"</span><span class=\"pun\">+</span><span class=\"pln\">method</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                    returnCount</span><span class=\"pun\">=</span><span class=\"pln\">returnValue</span><span class=\"pun\">==</span><span class=\"kwd\">null</span><span class=\"pun\">?</span><span class=\"lit\">0</span><span class=\"pun\">:</span><span class=\"lit\">1</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                    </span><span class=\"kwd\">break</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                </span><span class=\"kwd\">case</span><span class=\"pln\"> SELECT</span><span class=\"pun\">:</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                    </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"typ\">Map</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">.</span><span class=\"pln\">isAssignableFrom</span><span class=\"pun\">(</span><span class=\"pln\">returnType</span><span class=\"pun\">)){</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">returnType</span><span class=\"pun\">.</span><span class=\"pln\">isInterface</span><span class=\"pun\">()){</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                            returnType</span><span class=\"pun\">=</span><span class=\"typ\">HashMap</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                        returnValue</span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">CurdTool</span><span class=\"pun\">.</span><span class=\"pln\">selectOne</span><span class=\"pun\">(</span><span class=\"pln\">  sql</span><span class=\"pun\">,</span><span class=\"typ\">ConnectionHolder</span><span class=\"pun\">.</span><span class=\"pln\">getConnection</span><span class=\"pun\">()</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                                </span><span class=\"pun\">,</span><span class=\"pln\">returnType</span><span class=\"pun\">,</span><span class=\"pln\">sqlArgs</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">returnType</span><span class=\"pun\">==</span><span class=\"typ\">List</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">||</span><span class=\"pln\">returnType</span><span class=\"pun\">==</span><span class=\"typ\">ArrayList</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                        </span><span class=\"typ\">Type</span><span class=\"pln\"> genericReturnType </span><span class=\"pun\">=</span><span class=\"pln\"> method</span><span class=\"pun\">.</span><span class=\"pln\">getGenericReturnType</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">genericReturnType </span><span class=\"kwd\">instanceof</span><span class=\"pln\"> </span><span class=\"typ\">ParameterizedType</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                            </span><span class=\"typ\">Type</span><span class=\"pun\">[]</span><span class=\"pln\"> actualTypeArguments </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">((</span><span class=\"typ\">ParameterizedType</span><span class=\"pun\">)</span><span class=\"pln\"> genericReturnType</span><span class=\"pun\">).</span><span class=\"pln\">getActualTypeArguments</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">actualTypeArguments</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">==</span><span class=\"lit\">1</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                                </span><span class=\"typ\">Class</span><span class=\"pun\">&lt;?&gt;</span><span class=\"pln\"> componentType</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                                </span><span class=\"kwd\">if</span><span class=\"pun\">((</span><span class=\"pln\">componentType</span><span class=\"pun\">=</span><span class=\"pln\">classCache</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">actualTypeArguments</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">].</span><span class=\"pln\">getTypeName</span><span class=\"pun\">()))==</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                                    componentType</span><span class=\"pun\">=</span><span class=\"typ\">Class</span><span class=\"pun\">.</span><span class=\"pln\">forName</span><span class=\"pun\">(</span><span class=\"pln\">actualTypeArguments</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">].</span><span class=\"pln\">getTypeName</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                                    classCache</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">actualTypeArguments</span><span class=\"pun\">[</span><span class=\"lit\">0</span><span class=\"pun\">].</span><span class=\"pln\">getTypeName</span><span class=\"pun\">(),</span><span class=\"pln\">componentType</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                                </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                                log</span><span class=\"pun\">.</span><span class=\"pln\">v</span><span class=\"pun\">(</span><span class=\"str\">\"returnType&lt;T&gt; ===&gt;\"</span><span class=\"pun\">+</span><span class=\"pln\">componentType</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                                </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">componentType</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">().</span><span class=\"pln\">startsWith</span><span class=\"pun\">(</span><span class=\"typ\">FrameworkConfig</span><span class=\"pun\">.</span><span class=\"pln\">basePackage</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                                        </span><span class=\"pun\">||</span><span class=\"pln\">getBasicDataClassSet</span><span class=\"pun\">().</span><span class=\"pln\">contains</span><span class=\"pun\">(</span><span class=\"pln\">componentType</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                                        </span><span class=\"pun\">||</span><span class=\"typ\">Map</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">.</span><span class=\"pln\">isAssignableFrom</span><span class=\"pun\">(</span><span class=\"pln\">componentType</span><span class=\"pun\">)){</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                                    returnValue</span><span class=\"pun\">=</span><span class=\"typ\">CurdTool</span><span class=\"pun\">.</span><span class=\"pln\">selectList</span><span class=\"pun\">(</span><span class=\"pln\">  sql</span><span class=\"pun\">,</span><span class=\"typ\">ConnectionHolder</span><span class=\"pun\">.</span><span class=\"pln\">getConnection</span><span class=\"pun\">(),</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                                            componentType</span><span class=\"pun\">,</span><span class=\"pln\">sqlArgs</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                                    returnCount</span><span class=\"pun\">=((</span><span class=\"typ\">List</span><span class=\"pun\">)</span><span class=\"pln\">returnValue</span><span class=\"pun\">).</span><span class=\"pln\">size</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                                </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                                    </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"List必须指定泛型\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                                </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                            </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"List必须指定泛型\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">returnType</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">().</span><span class=\"pln\">startsWith</span><span class=\"pun\">(</span><span class=\"typ\">FrameworkConfig</span><span class=\"pun\">.</span><span class=\"pln\">basePackage</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                            </span><span class=\"pun\">||</span><span class=\"pln\">getBasicDataClassSet</span><span class=\"pun\">().</span><span class=\"pln\">contains</span><span class=\"pun\">(</span><span class=\"pln\">returnType</span><span class=\"pun\">)){</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                        returnValue</span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">CurdTool</span><span class=\"pun\">.</span><span class=\"pln\">selectOne</span><span class=\"pun\">(</span><span class=\"pln\">  sql</span><span class=\"pun\">,</span><span class=\"typ\">ConnectionHolder</span><span class=\"pun\">.</span><span class=\"pln\">getConnection</span><span class=\"pun\">()</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                                </span><span class=\"pun\">,</span><span class=\"pln\">returnType</span><span class=\"pun\">,</span><span class=\"pln\">sqlArgs</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                        returnCount</span><span class=\"pun\">=(</span><span class=\"pln\">returnValue</span><span class=\"pun\">==</span><span class=\"kwd\">null</span><span class=\"pun\">?</span><span class=\"lit\">0</span><span class=\"pun\">:</span><span class=\"lit\">1</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">returnType</span><span class=\"pun\">.</span><span class=\"pln\">isArray</span><span class=\"pun\">()){</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                        returnValue</span><span class=\"pun\">=</span><span class=\"typ\">CurdTool</span><span class=\"pun\">.</span><span class=\"pln\">selectArray</span><span class=\"pun\">(</span><span class=\"pln\">  sql</span><span class=\"pun\">,</span><span class=\"typ\">ConnectionHolder</span><span class=\"pun\">.</span><span class=\"pln\">getConnection</span><span class=\"pun\">()</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                                </span><span class=\"pun\">,</span><span class=\"pln\">returnType</span><span class=\"pun\">.</span><span class=\"pln\">getComponentType</span><span class=\"pun\">(),</span><span class=\"pln\">sqlArgs</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                        returnCount</span><span class=\"pun\">=(</span><span class=\"typ\">Array</span><span class=\"pun\">.</span><span class=\"pln\">getLength</span><span class=\"pun\">(</span><span class=\"pln\">returnValue</span><span class=\"pun\">));</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span><span class=\"kwd\">else</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                        </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"不支持的select返回值\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                    </span><span class=\"kwd\">break</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">            log</span><span class=\"pun\">.</span><span class=\"pln\">v</span><span class=\"pun\">(</span><span class=\"str\">\"returnCount   ===&gt; \"</span><span class=\"pun\">+</span><span class=\"pln\">returnCount</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">            log</span><span class=\"pun\">.</span><span class=\"pln\">v</span><span class=\"pun\">(</span><span class=\"str\">\"returnCount   ===&gt; \"</span><span class=\"pun\">+</span><span class=\"pln\">returnValue</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> returnValue</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">catch</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">Exception</span><span class=\"pln\"> e</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">            log</span><span class=\"pun\">.</span><span class=\"pln\">e</span><span class=\"pun\">(</span><span class=\"pln\">e</span><span class=\"pun\">.</span><span class=\"pln\">getMessage</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"kwd\">throw</span><span class=\"pln\"> e</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">finally</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">needReleaseConnection</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                </span><span class=\"typ\">ConnectionUtil</span><span class=\"pun\">.</span><span class=\"pln\">releaseConnect</span><span class=\"pun\">(</span><span class=\"typ\">ConnectionHolder</span><span class=\"pun\">.</span><span class=\"pln\">getConnection</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                </span><span class=\"typ\">ConnectionHolder</span><span class=\"pun\">.</span><span class=\"pln\">removeConnection</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L2\"><code></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"lit\">@SuppressWarnings</span><span class=\"pun\">(</span><span class=\"str\">\"unchecked\"</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> T getProxy</span><span class=\"pun\">(){</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">T</span><span class=\"pun\">)</span><span class=\"typ\">Proxy</span><span class=\"pun\">.</span><span class=\"pln\">newProxyInstance</span><span class=\"pun\">(</span><span class=\"pln\">proxyInterface</span><span class=\"pun\">.</span><span class=\"pln\">getClassLoader</span><span class=\"pun\">(),</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Class</span><span class=\"pun\">[]{</span><span class=\"pln\">proxyInterface</span><span class=\"pun\">},</span><span class=\"kwd\">this</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L7\"><code></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">DaoBindValueInfo</span><span class=\"pun\">{</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">Map</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"typ\">Field</span><span class=\"pun\">&gt;</span><span class=\"pln\"> fieldMap</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">Map</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"typ\">Integer</span><span class=\"pun\">&gt;</span><span class=\"pln\"> objectIndex</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">Map</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"typ\">Boolean</span><span class=\"pun\">&gt;</span><span class=\"pln\"> isObject</span><span class=\"pun\">;</span><span class=\"com\">//这个参数是否可以直接传递，即从params拿出的是一个整数来获取变量的下标</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">&gt;</span><span class=\"pln\"> keys</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L4\"><code></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">enum</span><span class=\"pln\"> </span><span class=\"typ\">SqlType</span><span class=\"pun\">{</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        INSERT</span><span class=\"pun\">,</span><span class=\"pln\">UPDATE</span><span class=\"pun\">,</span><span class=\"pln\">DELETE</span><span class=\"pun\">,</span><span class=\"pln\">SELECT</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L8\"><code><span class=\"pun\">}</span></code></li>\n  </ol></pre>\n</body>', '实现一个简单的mybatis orm框架，让我们一起遨游java的海洋', '无', '', 1, NULL, '实现一个简单的mybatis orm框架', NULL, '3e78c0502b764e84b6a799e3268ec213', 2, 7, 2, 1608397658289, '#### 废话不多说，直接开干！\n众所周知，在java中，反射就是可以为所欲为！\n那么我们要实现一个orm框架就要用到它！\n\n#### 第一步：代理这个持久层对象\n这里采用jdk的动态代理，为持久层创建一个动态进行处理的对象\n```\npublic class DaoInvocationHandlerImpl<T> implements InvocationHandler {\n	//用来接管具体的操作\n    @Override\n    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n        return null;\n    }\n}\n```\n需要注意的是：jdk的动态代理的代理对象必须要是一个接口。\n\n接下来就是模仿mybatis的创建几个curd的注解，@Select，@Insert，@Update，@Delete 。\n我们用注解来装载我们的sql语句。\n```\n@Retention(RetentionPolicy.RUNTIME)\n@Target({ElementType.METHOD})\npublic @interface Select {\n    String value();\n}\n\n@Retention(RetentionPolicy.RUNTIME)\n@Target({ElementType.METHOD})\npublic @interface Insert {\n    String value();\n}\n\n@Retention(RetentionPolicy.RUNTIME)\n@Target({ElementType.METHOD})\npublic @interface Update {\n    String value();\n}\n\n@Retention(RetentionPolicy.RUNTIME)\n@Target({ElementType.METHOD})\npublic @interface Delete {\n    String value();\n}\n\n```\n\nok，准备工作完毕。\n\n#### 第二步：解析持久层的接口方法\n由于反射的效率相对于直接调用方法，效率不高，所以在类初始化的时候，对这个类的方法，参数列表等信息，进行缓存，此处使用HashMap来进行缓存，因为put操作只在初始化类的时候进行，在运行期间不会有put操作，所以使用线程不安全HashMap。因此，方法名不能重复。\n```\nprivate void init() throws InstantiationException, IllegalAccessException {\n        Set<String> methodNameSet=new HashSet<>();\n        this.bindValueInfoMap=new HashMap<>();\n        Method[] methods = proxyInterface.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if(methodNameSet.contains(methods[i].getName())){\n                log.e(proxyInterface.getName()+\" 方法名重复:\"+methods[i].getName());\n                throw new RuntimeException(\"dao 的方法名不能重复\");\n            }\n            methodNameSet.add(proxyInterface.getName());\n            if(methods[i].getAnnotation(Insert.class)!=null||methods[i].getAnnotation(Update.class)!=null\n            ||methods[i].getAnnotation(Delete.class)!=null||methods[i].getAnnotation(Select.class)!=null){\n                this.bindValueInfoMap.put(methods[i].getName(),createBindInfo(methods[i]));\n            }else{\n                log.e(proxyInterface.getName()+\" 方法名没有sql:\"+methods[i].getName());\n                throw new RuntimeException(\"数据层接口方法必须有select,update,delete或insert注解\");\n            }\n        }\n    }\n```\n检测完方法名和注解后，就是对于这个方法注解中的sql的参数来进行一对一的映射了，同时将sql语句中的参数替换成？，对参数个数，合法性进行处理。\n```\nprivate DaoBindValueInfo createBindInfo(Method method) throws IllegalAccessException, InstantiationException {\n        Annotation[] annotations={method.getAnnotation(Insert.class),\n                method.getAnnotation(Update.class),\n                method.getAnnotation(Select.class),\n                method.getAnnotation(Delete.class)};\n        String sql=null;\n        int count=0;\n        for (Annotation annotation : annotations) {\n            if (annotation!=null) {\n                count++;\n            }\n        }\n        if(count>1){\n            throw new RuntimeException(\"select,update,delete或insert注解不能共存\");\n        }\n        if(annotations[0]!=null){\n            sql=((Insert)annotations[0]).value();\n            methodSqlType.put(method.getName(),SqlType.INSERT);\n        }else if(annotations[1]!=null){\n            sql=((Update)annotations[1]).value();\n            methodSqlType.put(method.getName(),SqlType.UPDATE);\n        }else if(annotations[2]!=null){\n            sql=((Select)annotations[2]).value();\n            methodSqlType.put(method.getName(),SqlType.SELECT);\n        }else if(annotations[3]!=null){\n            sql=((Delete)annotations[3]).value();\n            methodSqlType.put(method.getName(),SqlType.DELETE);\n        }\n        if (sql==null) {\n            throw new RuntimeException(\"sql 不能为空! at:\"+method.getName());\n        }\n        Matcher matcher=pattern.matcher(sql);\n        String key;\n        Set<String> params=new HashSet<>();\n        List<String> keys=new ArrayList<>();\n        while (matcher.find()) {\n            key=matcher.group(1).trim();\n            params.add(key);\n            keys.add(key);\n        }\n//        Class<?>[] parameterTypes = method.getParameterTypes();\n        Parameter[] parameters = method.getParameters();\n        DaoBindValueInfo bindValueInfo=new DaoBindValueInfo();\n        bindValueInfo.isObject=new HashMap<>();\n        bindValueInfo.fieldMap=new HashMap<>();\n        bindValueInfo.objectIndex=new HashMap<>();\n        bindValueInfo.keys=keys;\n        Set<String> argsParam=new HashSet<>();\n        Alias alias;\n        String fieldName;\n        for (int i = 0; i < parameters.length; i++) {\n            if(getBasicDataClassSet().contains(parameters[i].getType())){\n                BindParam bindParam=parameters[i].getAnnotation(BindParam.class);\n                if(bindParam==null)\n                    throw new RuntimeException(\"基础数据需要有@BindParam注解来绑定\");\n                else if(!params.contains(bindParam.value()))\n                    throw new RuntimeException(\"sql中无此参数!\");\n                bindValueInfo.isObject.put(bindParam.value(),true);\n                bindValueInfo.objectIndex.put(bindParam.value(),i);\n                if(argsParam.contains(bindParam.value()))\n                    throw new RuntimeException(\"参数重复\");\n                argsParam.add(bindParam.value());\n            }else {\n                Field[] fields = parameters[i].getType().getDeclaredFields();\n                for (Field field : fields) {\n                    if((alias=field.getAnnotation(Alias.class))!=null){\n                        fieldName=alias.value();\n                    }else {\n                        fieldName=field.getName();\n                    }\n                    if(params.contains(fieldName)){\n                        bindValueInfo.isObject.put(fieldName,false);\n                        bindValueInfo.objectIndex.put(fieldName,i);\n                        bindValueInfo.fieldMap.put(fieldName,field);\n                        if(argsParam.contains(fieldName))\n                            throw new RuntimeException(\"参数重复\");\n                        argsParam.add(fieldName);\n                    }\n                }\n            }\n        }\n        //System.out.println(sql.replaceAll(\"#\\\\{(.+?)\\\\}\",\"?\"));\n        this.sqlMap.put(method.getName(),sql.replaceAll(\"#\\\\{(.+?)\\\\}\",\"?\"));\n        String param;\n        for (int i = 0; i < bindValueInfo.keys.size(); i++) {\n            param=bindValueInfo.keys.get(i);\n            try {\n                if(bindValueInfo.isObject.get(param)){\n                    log.d(param + \"  是对象 args下标\" + bindValueInfo.objectIndex.get(param));\n                }else {\n                    log.d(param + \"  是字段 args下标\" + bindValueInfo.objectIndex.get(param)+\" field:\"\n                            +bindValueInfo.fieldMap.get(param));\n                }\n            }catch (Exception e){\n                throw new RuntimeException(param+\" 没有找到匹配的字段\");\n            }\n        }\n        if(params.size()==argsParam.size())\n            return bindValueInfo;\n        else\n            throw new RuntimeException(\"参数不匹配\");\n    }\n```\n经过上面的处理，一个简单的参数映射就完成了。\n\n#### 第三步：执行sql并封装结果\n在第一步和第二步中，程序已经将sql和参数处理完毕，接下来要做的就是对数据库返回的结果集进行操作，这里使用反射来获取返回值。\n对于updete delete insert 等，只需要返回或不返回影响条数\n对于select的就比较麻烦了。\n这就留给下次详细描述\n以下是代理类完整代码\n```\npackage cn.gjy.blog.framework.Invocation;\n\nimport cn.gjy.blog.framework.annotation.*;\nimport cn.gjy.blog.framework.config.FrameworkConfig;\nimport cn.gjy.blog.framework.database.BeanAssignment;\nimport cn.gjy.blog.framework.database.ConnectionHolder;\nimport cn.gjy.blog.framework.database.ConnectionUtil;\nimport cn.gjy.blog.framework.database.CurdTool;\nimport cn.gjy.blog.framework.factory.impl.ObjectFactory;\nimport cn.gjy.blog.framework.log.SimpleLog;\n\nimport java.lang.annotation.Annotation;\nimport java.lang.reflect.*;\nimport java.util.*;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\n/**\n * @author gujianyang\n * @date 2020/11/27\n */\npublic class DaoInvocationHandlerImpl<T> implements InvocationHandler {\n    private static final SimpleLog log=SimpleLog.log(DaoInvocationHandlerImpl.class);\n\n    private final Class<T> proxyInterface;\n\n    private Map<String,DaoBindValueInfo> bindValueInfoMap;\n\n    private final Map<String,String> sqlMap=new HashMap<>();\n\n    private final Map<String,Class<?>> classCache=new HashMap<>();\n\n    private final Map<String,SqlType> methodSqlType=new HashMap<>();\n    \n    private final Map<String,CusMethodSql> cusMethodSqlMap=new HashMap<>();\n\n\n    public DaoInvocationHandlerImpl(Class<T> proxyInterface) throws IllegalAccessException, InstantiationException {\n        this.proxyInterface=proxyInterface;\n        init();\n    }\n\n    private void init() throws InstantiationException, IllegalAccessException {\n        Set<String> methodNameSet=new HashSet<>();\n        this.bindValueInfoMap=new HashMap<>();\n        Method[] methods = proxyInterface.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if(methodNameSet.contains(methods[i].getName())){\n                log.e(proxyInterface.getName()+\" 方法名重复:\"+methods[i].getName());\n                throw new RuntimeException(\"dao 的方法名不能重复\");\n            }\n            methodNameSet.add(proxyInterface.getName());\n            if(methods[i].getAnnotation(Insert.class)!=null||methods[i].getAnnotation(Update.class)!=null\n            ||methods[i].getAnnotation(Delete.class)!=null||methods[i].getAnnotation(Select.class)!=null\n            ||methods[i].getAnnotation(UseCustomMethod.class)!=null){\n                this.bindValueInfoMap.put(methods[i].getName(),createBindInfo(methods[i]));\n            }else{\n                log.e(proxyInterface.getName()+\" 方法名没有sql:\"+methods[i].getName());\n                throw new RuntimeException(\"数据层接口方法必须有select,update,delete或insert注解\");\n            }\n        }\n    }\n\n    private static final Pattern pattern=Pattern.compile(\"#\\\\{(.+?)\\\\}\");\n\n    private DaoBindValueInfo createBindInfo(Method method) throws IllegalAccessException, InstantiationException {\n        if(method.getAnnotation(UseCustomMethod.class)!=null){\n            UseCustomMethod useCustomMethod=method.getAnnotation(UseCustomMethod.class);\n            CusMethodSql cusMethodSql = useCustomMethod.value().newInstance();\n            cusMethodSqlMap.put(method.getName(),cusMethodSql);\n            methodSqlType.put(method.getName(),useCustomMethod.sqlType());\n            return null;\n        }\n        Annotation[] annotations={method.getAnnotation(Insert.class),\n                method.getAnnotation(Update.class),\n                method.getAnnotation(Select.class),\n                method.getAnnotation(Delete.class)};\n        String sql=null;\n        int count=0;\n        for (Annotation annotation : annotations) {\n            if (annotation!=null) {\n                count++;\n            }\n        }\n        if(count>1){\n            throw new RuntimeException(\"select,update,delete或insert注解不能共存\");\n        }\n        if(annotations[0]!=null){\n            sql=((Insert)annotations[0]).value();\n            methodSqlType.put(method.getName(),SqlType.INSERT);\n        }else if(annotations[1]!=null){\n            sql=((Update)annotations[1]).value();\n            methodSqlType.put(method.getName(),SqlType.UPDATE);\n        }else if(annotations[2]!=null){\n            sql=((Select)annotations[2]).value();\n            methodSqlType.put(method.getName(),SqlType.SELECT);\n        }else if(annotations[3]!=null){\n            sql=((Delete)annotations[3]).value();\n            methodSqlType.put(method.getName(),SqlType.DELETE);\n        }\n        if (sql==null) {\n            throw new RuntimeException(\"sql 不能为空! at:\"+method.getName());\n        }\n        Matcher matcher=pattern.matcher(sql);\n        String key;\n        Set<String> params=new HashSet<>();\n        List<String> keys=new ArrayList<>();\n        while (matcher.find()) {\n            key=matcher.group(1).trim();\n            params.add(key);\n            keys.add(key);\n        }\n//        Class<?>[] parameterTypes = method.getParameterTypes();\n        Parameter[] parameters = method.getParameters();\n        DaoBindValueInfo bindValueInfo=new DaoBindValueInfo();\n        bindValueInfo.isObject=new HashMap<>();\n        bindValueInfo.fieldMap=new HashMap<>();\n        bindValueInfo.objectIndex=new HashMap<>();\n        bindValueInfo.keys=keys;\n        Set<String> argsParam=new HashSet<>();\n        Alias alias;\n        String fieldName;\n        for (int i = 0; i < parameters.length; i++) {\n            if(getBasicDataClassSet().contains(parameters[i].getType())){\n                BindParam bindParam=parameters[i].getAnnotation(BindParam.class);\n                if(bindParam==null)\n                    throw new RuntimeException(\"基础数据需要有@BindParam注解来绑定\");\n                else if(!params.contains(bindParam.value()))\n                    throw new RuntimeException(\"sql中无此参数!\");\n                bindValueInfo.isObject.put(bindParam.value(),true);\n                bindValueInfo.objectIndex.put(bindParam.value(),i);\n                if(argsParam.contains(bindParam.value()))\n                    throw new RuntimeException(\"参数重复\");\n                argsParam.add(bindParam.value());\n            }else {\n                Field[] fields = parameters[i].getType().getDeclaredFields();\n                for (Field field : fields) {\n                    if((alias=field.getAnnotation(Alias.class))!=null){\n                        fieldName=alias.value();\n                    }else {\n                        fieldName=field.getName();\n                    }\n                    if(params.contains(fieldName)){\n                        bindValueInfo.isObject.put(fieldName,false);\n                        bindValueInfo.objectIndex.put(fieldName,i);\n                        bindValueInfo.fieldMap.put(fieldName,field);\n                        if(argsParam.contains(fieldName))\n                            throw new RuntimeException(\"参数重复\");\n                        argsParam.add(fieldName);\n                    }\n                }\n            }\n        }\n        //System.out.println(sql.replaceAll(\"#\\\\{(.+?)\\\\}\",\"?\"));\n        this.sqlMap.put(method.getName(),sql.replaceAll(\"#\\\\{(.+?)\\\\}\",\"?\"));\n        String param;\n        for (int i = 0; i < bindValueInfo.keys.size(); i++) {\n            param=bindValueInfo.keys.get(i);\n            try {\n                if(bindValueInfo.isObject.get(param)){\n                    log.d(param + \"  是对象 args下标\" + bindValueInfo.objectIndex.get(param));\n                }else {\n                    log.d(param + \"  是字段 args下标\" + bindValueInfo.objectIndex.get(param)+\" field:\"\n                            +bindValueInfo.fieldMap.get(param));\n                }\n            }catch (Exception e){\n                throw new RuntimeException(param+\" 没有找到匹配的字段\");\n            }\n        }\n        if(params.size()==argsParam.size())\n            return bindValueInfo;\n        else\n            throw new RuntimeException(\"参数不匹配\");\n    }\n\n    public static Set<Class<?>> getBasicDataClassSet() {\n        return BeanAssignment.getBasicDataClassSet();\n    }\n\n    @Override\n    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n        if (Object.class.equals(method.getDeclaringClass())) {\n            return method.invoke(this,args);\n        }\n        Object returnValue=null;\n        boolean needReleaseConnection=false;\n        try {\n            if(ConnectionHolder.getConnection()==null){\n                needReleaseConnection=true;\n                ConnectionHolder.setConnection(ConnectionUtil.getConnection());\n            }\n            SqlType sqlType;\n            DaoBindValueInfo info;\n            StringBuilder sb=new StringBuilder();\n            Object[] sqlArgs;\n            String sql;\n            if((info=bindValueInfoMap.get(method.getName()))!=null){\n                sql=sqlMap.get(method.getName());\n                log.v(\"SQL           ===>\"+  sql);\n                String param;\n                sb.append(\"Param         ===> \");\n                sqlArgs=new Object[info.keys.size()];\n                for (int i = 0,l=info.keys.size(); i < l; i++) {\n                    param=info.keys.get(i);\n                    int index = info.objectIndex.get(param);\n                    if(i!=0){\n                        sb.append(\" , \");\n                    }\n                    if(info.isObject.get(param)){\n                        sqlArgs[i]=args[index];\n                    }else {\n                        Field field = info.fieldMap.get(param);\n                        field.setAccessible(true);\n                        Object o = field.get(args[index]);\n                        sqlArgs[i]=o;\n                    }\n                    sb.append(sqlArgs[i]);\n                }\n            }else {\n                CusMethodSql cusMethodSql = cusMethodSqlMap.get(method.getName());\n                CusMethodSql.SqlAndArgs handle = cusMethodSql.handle(args);\n                sqlArgs=handle.getArgs();\n                sql=handle.getSql();\n                log.v(\"SQL           ===>\"+  sql);\n                sb.append(\"Param         ===> \");\n                for (int i = 0; i < handle.getArgs().length; i++) {\n                    if(i!=0){\n                        sb.append(\" , \");\n                    }\n                    sb.append(handle.getArgs()[i]);\n                }\n            }\n            log.v(sb.toString());\n            sqlType = methodSqlType.get(method.getName());\n            Class<?> returnType = method.getReturnType();\n            log.v(\"returnType    ====>\"+returnType.getName());\n            int returnCount=0;\n            switch (sqlType){\n                case DELETE:\n                case INSERT:\n                case UPDATE:\n                    Integer count=CurdTool.update(  sql, ConnectionHolder.getConnection(),\n                            sqlArgs);\n                    if(returnType==Void.class||returnType==void.class){\n                        log.v(\"舍弃\");\n                    }else if(returnType==Integer.class||returnType==int.class){\n                        returnValue= count;\n                    }else if(returnType==Long.class||returnType==long.class){\n                        returnValue= count.longValue();\n                    }else\n                        throw new RuntimeException(\"DELETE,INSERT,UPDATE只能返回int,long,void,或其包装类型 at:\"\n                                +proxyInterface.getName()+\".\"+method.getName());\n                    returnCount=returnValue==null?0:1;\n                    break;\n                case SELECT:\n                    if(Map.class.isAssignableFrom(returnType)){\n                        if(returnType.isInterface()){\n                            returnType=HashMap.class;\n                        }\n                        returnValue= CurdTool.selectOne(  sql,ConnectionHolder.getConnection()\n                                ,returnType,sqlArgs);\n                    }else if (returnType==List.class||returnType==ArrayList.class){\n                        Type genericReturnType = method.getGenericReturnType();\n                        if (genericReturnType instanceof ParameterizedType) {\n                            Type[] actualTypeArguments = ((ParameterizedType) genericReturnType).getActualTypeArguments();\n                            if(actualTypeArguments.length==1){\n                                Class<?> componentType;\n                                if((componentType=classCache.get(actualTypeArguments[0].getTypeName()))==null){\n                                    componentType=Class.forName(actualTypeArguments[0].getTypeName());\n                                    classCache.put(actualTypeArguments[0].getTypeName(),componentType);\n                                }\n                                log.v(\"returnType<T> ===>\"+componentType.getName());\n                                if(componentType.getName().startsWith(FrameworkConfig.basePackage)\n                                        ||getBasicDataClassSet().contains(componentType)\n                                        ||Map.class.isAssignableFrom(componentType)){\n                                    returnValue=CurdTool.selectList(  sql,ConnectionHolder.getConnection(),\n                                            componentType,sqlArgs);\n                                    returnCount=((List)returnValue).size();\n                                }else {\n                                    throw new RuntimeException(\"List必须指定泛型\");\n                                }\n                            }\n                        }else {\n                            throw new RuntimeException(\"List必须指定泛型\");\n                        }\n                    }else if(returnType.getName().startsWith(FrameworkConfig.basePackage)\n                            ||getBasicDataClassSet().contains(returnType)){\n                        returnValue= CurdTool.selectOne(  sql,ConnectionHolder.getConnection()\n                                ,returnType,sqlArgs);\n                        returnCount=(returnValue==null?0:1);\n                    }else if(returnType.isArray()){\n                        returnValue=CurdTool.selectArray(  sql,ConnectionHolder.getConnection()\n                                ,returnType.getComponentType(),sqlArgs);\n                        returnCount=(Array.getLength(returnValue));\n                    }else\n                        throw new RuntimeException(\"不支持的select返回值\");\n                    break;\n            }\n            log.v(\"returnCount   ===> \"+returnCount);\n            log.v(\"returnCount   ===> \"+returnValue);\n            return returnValue;\n        }catch (Exception e){\n            log.e(e.getMessage());\n            throw e;\n        }\n        finally {\n            if(needReleaseConnection){\n                ConnectionUtil.releaseConnect(ConnectionHolder.getConnection());\n                ConnectionHolder.removeConnection();\n            }\n        }\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    public T getProxy(){\n        return (T)Proxy.newProxyInstance(proxyInterface.getClassLoader(),new Class[]{proxyInterface},this);\n    }\n\n    private static class DaoBindValueInfo{\n        private Map<String,Field> fieldMap;\n        private Map<String,Integer> objectIndex;\n        private Map<String,Boolean> isObject;//这个参数是否可以直接传递，即从params拿出的是一个整数来获取变量的下标\n        private List<String> keys;\n    }\n\n    public enum SqlType{\n        INSERT,UPDATE,DELETE,SELECT\n    }\n}\n\n```', 13);
INSERT INTO `article` VALUES (17, '2020-12-24 20:13:37', NULL, 1, '<body>\n <pre class=\"prettyprint linenums prettyprinted\" style=\"\">\n  <ol class=\"linenums\">\n   <li class=\"L0\"><code><span class=\"kwd\">package</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">framework</span><span class=\"pun\">.</span><span class=\"pln\">database</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L1\"><code></code></li>\n   <li class=\"L2\"><code><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">math</span><span class=\"pun\">.</span><span class=\"typ\">BigDecimal</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L3\"><code><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">sql</span><span class=\"pun\">.*;</span></code></li>\n   <li class=\"L4\"><code><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">Date</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L5\"><code><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"typ\">List</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L6\"><code></code></li>\n   <li class=\"L7\"><code><span class=\"com\">/**</span></code></li>\n   <li class=\"L8\"><code><span class=\"com\"> * @author gujianyang</span></code></li>\n   <li class=\"L9\"><code><span class=\"com\"> * @date 2020/11/24</span></code></li>\n   <li class=\"L0\"><code><span class=\"com\"> * 增删查改工具类</span></code></li>\n   <li class=\"L1\"><code><span class=\"com\"> * 传递sql 值 自动绑定</span></code></li>\n   <li class=\"L2\"><code><span class=\"com\"> */</span></code></li>\n   <li class=\"L3\"><code><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">CurdTool</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L4\"><code></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> insertList</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pln\"> sql</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Connection</span><span class=\"pln\"> connection</span><span class=\"pun\">,</span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"typ\">Object</span><span class=\"pun\">[]&gt;</span><span class=\"pln\"> values</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">SQLException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">int</span><span class=\"pln\"> result</span><span class=\"pun\">=</span><span class=\"lit\">0</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"kwd\">try</span><span class=\"pun\">(</span><span class=\"typ\">PreparedStatement</span><span class=\"pln\"> preparedStatement </span><span class=\"pun\">=</span><span class=\"pln\"> connection</span><span class=\"pun\">.</span><span class=\"pln\">prepareStatement</span><span class=\"pun\">(</span><span class=\"pln\">sql</span><span class=\"pun\">)){</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">            </span><span class=\"typ\">Object</span><span class=\"pun\">[]</span><span class=\"pln\"> objects</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">            </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> i </span><span class=\"pun\">&lt;</span><span class=\"pln\"> values</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">();</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                objects</span><span class=\"pun\">=</span><span class=\"pln\">values</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                setPreparedStatementValues</span><span class=\"pun\">(</span><span class=\"pln\">preparedStatement</span><span class=\"pun\">,</span><span class=\"pln\">objects</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                result</span><span class=\"pun\">+=</span><span class=\"pln\">preparedStatement</span><span class=\"pun\">.</span><span class=\"pln\">executeUpdate</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> result</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L7\"><code></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">/**</span></code></li>\n   <li class=\"L9\"><code><span class=\"com\">     *</span></code></li>\n   <li class=\"L0\"><code><span class=\"com\">     * @param sql</span></code></li>\n   <li class=\"L1\"><code><span class=\"com\">     * @param connection</span></code></li>\n   <li class=\"L2\"><code><span class=\"com\">     * @param objects</span></code></li>\n   <li class=\"L3\"><code><span class=\"com\">     * @return 修改，插入，更新条数，如果有多条sql，只返回第一个结果。</span></code></li>\n   <li class=\"L4\"><code><span class=\"com\">     * @throws SQLException</span></code></li>\n   <li class=\"L5\"><code><span class=\"com\">     */</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> insert</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pln\"> sql</span><span class=\"pun\">,</span><span class=\"typ\">Connection</span><span class=\"pln\"> connection</span><span class=\"pun\">,</span><span class=\"typ\">Object</span><span class=\"pun\">...</span><span class=\"pln\"> objects</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">SQLException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"kwd\">try</span><span class=\"pun\">(</span><span class=\"typ\">PreparedStatement</span><span class=\"pln\"> preparedStatement </span><span class=\"pun\">=</span><span class=\"pln\"> connection</span><span class=\"pun\">.</span><span class=\"pln\">prepareStatement</span><span class=\"pun\">(</span><span class=\"pln\">sql</span><span class=\"pun\">))</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">            setPreparedStatementValues</span><span class=\"pun\">(</span><span class=\"pln\">preparedStatement</span><span class=\"pun\">,</span><span class=\"pln\">objects</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> preparedStatement</span><span class=\"pun\">.</span><span class=\"pln\">executeUpdate</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L2\"><code></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> update</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pln\"> sql</span><span class=\"pun\">,</span><span class=\"typ\">Connection</span><span class=\"pln\"> connection</span><span class=\"pun\">,</span><span class=\"typ\">Object</span><span class=\"pun\">...</span><span class=\"pln\"> objects</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">SQLException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> insert</span><span class=\"pun\">(</span><span class=\"pln\">sql</span><span class=\"pun\">,</span><span class=\"pln\">connection</span><span class=\"pun\">,</span><span class=\"pln\">objects</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L6\"><code></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">int</span><span class=\"pln\"> </span><span class=\"kwd\">delete</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pln\"> sql</span><span class=\"pun\">,</span><span class=\"typ\">Connection</span><span class=\"pln\"> connection</span><span class=\"pun\">,</span><span class=\"typ\">Object</span><span class=\"pun\">...</span><span class=\"pln\"> objects</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">SQLException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> insert</span><span class=\"pun\">(</span><span class=\"pln\">sql</span><span class=\"pun\">,</span><span class=\"pln\">connection</span><span class=\"pun\">,</span><span class=\"pln\">objects</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L0\"><code></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"com\">/**</span></code></li>\n   <li class=\"L2\"><code><span class=\"com\">     * 获取多个结果集 返回一个 ArrayList</span></code></li>\n   <li class=\"L3\"><code><span class=\"com\">     * @param sql</span></code></li>\n   <li class=\"L4\"><code><span class=\"com\">     * @param connection</span></code></li>\n   <li class=\"L5\"><code><span class=\"com\">     * @param t</span></code></li>\n   <li class=\"L6\"><code><span class=\"com\">     * @param objects</span></code></li>\n   <li class=\"L7\"><code><span class=\"com\">     * @param &lt;T&gt;</span></code></li>\n   <li class=\"L8\"><code><span class=\"com\">     * @return</span></code></li>\n   <li class=\"L9\"><code><span class=\"com\">     * @throws SQLException</span></code></li>\n   <li class=\"L0\"><code><span class=\"com\">     * @throws IllegalAccessException</span></code></li>\n   <li class=\"L1\"><code><span class=\"com\">     * @throws ClassNotFoundException</span></code></li>\n   <li class=\"L2\"><code><span class=\"com\">     * @throws InstantiationException</span></code></li>\n   <li class=\"L3\"><code><span class=\"com\">     */</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> selectList</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pln\"> sql</span><span class=\"pun\">,</span><span class=\"typ\">Connection</span><span class=\"pln\"> connection</span><span class=\"pun\">,</span><span class=\"typ\">Class</span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> t</span><span class=\"pun\">,</span><span class=\"typ\">Object</span><span class=\"pun\">...</span><span class=\"pln\"> objects</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">SQLException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">IllegalAccessException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">ClassNotFoundException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">InstantiationException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"typ\">ResultSet</span><span class=\"pln\"> resultSet </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">null</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">try</span><span class=\"pun\">(</span><span class=\"typ\">PreparedStatement</span><span class=\"pln\"> preparedStatement</span><span class=\"pun\">=</span><span class=\"pln\">connection</span><span class=\"pun\">.</span><span class=\"pln\">prepareStatement</span><span class=\"pun\">(</span><span class=\"pln\">sql</span><span class=\"pun\">))</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">            setPreparedStatementValues</span><span class=\"pun\">(</span><span class=\"pln\">preparedStatement</span><span class=\"pun\">,</span><span class=\"pln\">objects</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">            resultSet</span><span class=\"pun\">=</span><span class=\"pln\">preparedStatement</span><span class=\"pun\">.</span><span class=\"pln\">executeQuery</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"typ\">BeanAssignment</span><span class=\"pun\">.</span><span class=\"pln\">assignmentBeanList</span><span class=\"pun\">(</span><span class=\"pln\">resultSet</span><span class=\"pun\">,</span><span class=\"pln\">t</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">finally</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">resultSet</span><span class=\"pun\">!=</span><span class=\"kwd\">null</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                resultSet</span><span class=\"pun\">.</span><span class=\"pln\">close</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L5\"><code></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> T</span><span class=\"pun\">[]</span><span class=\"pln\"> selectArray</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pln\"> sql</span><span class=\"pun\">,</span><span class=\"typ\">Connection</span><span class=\"pln\"> connection</span><span class=\"pun\">,</span><span class=\"typ\">Class</span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> t</span><span class=\"pun\">,</span><span class=\"typ\">Object</span><span class=\"pun\">...</span><span class=\"pln\"> objects</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">SQLException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">IllegalAccessException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">ClassNotFoundException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">InstantiationException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"typ\">ResultSet</span><span class=\"pln\"> resultSet </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">null</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">try</span><span class=\"pun\">(</span><span class=\"typ\">PreparedStatement</span><span class=\"pln\"> preparedStatement</span><span class=\"pun\">=</span><span class=\"pln\">connection</span><span class=\"pun\">.</span><span class=\"pln\">prepareStatement</span><span class=\"pun\">(</span><span class=\"pln\">sql</span><span class=\"pun\">))</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">            setPreparedStatementValues</span><span class=\"pun\">(</span><span class=\"pln\">preparedStatement</span><span class=\"pun\">,</span><span class=\"pln\">objects</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">            resultSet</span><span class=\"pun\">=</span><span class=\"pln\">preparedStatement</span><span class=\"pun\">.</span><span class=\"pln\">executeQuery</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"typ\">BeanAssignment</span><span class=\"pun\">.</span><span class=\"pln\">assignmentBeanArray</span><span class=\"pun\">(</span><span class=\"pln\">resultSet</span><span class=\"pun\">,</span><span class=\"pln\">t</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">finally</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">resultSet</span><span class=\"pun\">!=</span><span class=\"kwd\">null</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                resultSet</span><span class=\"pun\">.</span><span class=\"pln\">close</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L7\"><code></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"com\">/**</span></code></li>\n   <li class=\"L9\"><code><span class=\"com\">     * 获取单个结果集 如果有多个 只取第一个</span></code></li>\n   <li class=\"L0\"><code><span class=\"com\">     * @param sql</span></code></li>\n   <li class=\"L1\"><code><span class=\"com\">     * @param connection</span></code></li>\n   <li class=\"L2\"><code><span class=\"com\">     * @param t</span></code></li>\n   <li class=\"L3\"><code><span class=\"com\">     * @param objects</span></code></li>\n   <li class=\"L4\"><code><span class=\"com\">     * @param &lt;T&gt; 实体类</span></code></li>\n   <li class=\"L5\"><code><span class=\"com\">     * @return</span></code></li>\n   <li class=\"L6\"><code><span class=\"com\">     * @throws SQLException</span></code></li>\n   <li class=\"L7\"><code><span class=\"com\">     * @throws IllegalAccessException</span></code></li>\n   <li class=\"L8\"><code><span class=\"com\">     * @throws ClassNotFoundException</span></code></li>\n   <li class=\"L9\"><code><span class=\"com\">     * @throws InstantiationException</span></code></li>\n   <li class=\"L0\"><code><span class=\"com\">     */</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> T selectOne</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pln\"> sql</span><span class=\"pun\">,</span><span class=\"typ\">Connection</span><span class=\"pln\"> connection</span><span class=\"pun\">,</span><span class=\"typ\">Class</span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> t</span><span class=\"pun\">,</span><span class=\"typ\">Object</span><span class=\"pun\">...</span><span class=\"pln\"> objects</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">SQLException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">IllegalAccessException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">ClassNotFoundException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">InstantiationException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"typ\">ResultSet</span><span class=\"pln\"> resultSet </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">null</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"kwd\">try</span><span class=\"pun\">(</span><span class=\"typ\">PreparedStatement</span><span class=\"pln\"> preparedStatement</span><span class=\"pun\">=</span><span class=\"pln\">connection</span><span class=\"pun\">.</span><span class=\"pln\">prepareStatement</span><span class=\"pun\">(</span><span class=\"pln\">sql</span><span class=\"pun\">))</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">            setPreparedStatementValues</span><span class=\"pun\">(</span><span class=\"pln\">preparedStatement</span><span class=\"pun\">,</span><span class=\"pln\">objects</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">            resultSet</span><span class=\"pun\">=</span><span class=\"pln\">preparedStatement</span><span class=\"pun\">.</span><span class=\"pln\">executeQuery</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"typ\">BeanAssignment</span><span class=\"pun\">.</span><span class=\"pln\">assignmentBean</span><span class=\"pun\">(</span><span class=\"pln\">resultSet</span><span class=\"pun\">,</span><span class=\"pln\">t</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">finally</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">resultSet</span><span class=\"pun\">!=</span><span class=\"kwd\">null</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                resultSet</span><span class=\"pun\">.</span><span class=\"pln\">close</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L2\"><code></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> setPreparedStatementValues</span><span class=\"pun\">(</span><span class=\"typ\">PreparedStatement</span><span class=\"pln\"> preparedStatement</span><span class=\"pun\">,</span><span class=\"typ\">Object</span><span class=\"pun\">[]</span><span class=\"pln\"> objects</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">SQLException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"typ\">Object</span><span class=\"pln\"> o</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> i </span><span class=\"pun\">&lt;</span><span class=\"pln\"> objects</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">            o</span><span class=\"pun\">=</span><span class=\"pln\">objects</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">];</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">o</span><span class=\"pun\">==</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                preparedStatement</span><span class=\"pun\">.</span><span class=\"pln\">setNull</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Types</span><span class=\"pun\">.</span><span class=\"pln\">NULL</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">o </span><span class=\"kwd\">instanceof</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                preparedStatement</span><span class=\"pun\">.</span><span class=\"pln\">setString</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">,(</span><span class=\"typ\">String</span><span class=\"pun\">)</span><span class=\"pln\"> o</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">o </span><span class=\"kwd\">instanceof</span><span class=\"pln\"> </span><span class=\"typ\">Date</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                preparedStatement</span><span class=\"pun\">.</span><span class=\"pln\">setDate</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">sql</span><span class=\"pun\">.</span><span class=\"typ\">Date</span><span class=\"pun\">(((</span><span class=\"typ\">Date</span><span class=\"pun\">)</span><span class=\"pln\">o</span><span class=\"pun\">).</span><span class=\"pln\">getTime</span><span class=\"pun\">()));</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">o </span><span class=\"kwd\">instanceof</span><span class=\"pln\"> </span><span class=\"typ\">Number</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                </span><span class=\"typ\">Number</span><span class=\"pln\"> number</span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">Number</span><span class=\"pun\">)</span><span class=\"pln\"> o</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">o </span><span class=\"kwd\">instanceof</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                    preparedStatement</span><span class=\"pun\">.</span><span class=\"pln\">setInt</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\">number</span><span class=\"pun\">.</span><span class=\"pln\">intValue</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">o </span><span class=\"kwd\">instanceof</span><span class=\"pln\"> </span><span class=\"typ\">Double</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                    preparedStatement</span><span class=\"pun\">.</span><span class=\"pln\">setDouble</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\">number</span><span class=\"pun\">.</span><span class=\"pln\">doubleValue</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">o </span><span class=\"kwd\">instanceof</span><span class=\"pln\"> </span><span class=\"typ\">Long</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                    preparedStatement</span><span class=\"pun\">.</span><span class=\"pln\">setLong</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\">number</span><span class=\"pun\">.</span><span class=\"pln\">longValue</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">o </span><span class=\"kwd\">instanceof</span><span class=\"pln\"> </span><span class=\"typ\">Float</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                    preparedStatement</span><span class=\"pun\">.</span><span class=\"pln\">setFloat</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\">number</span><span class=\"pun\">.</span><span class=\"pln\">floatValue</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">o </span><span class=\"kwd\">instanceof</span><span class=\"pln\"> </span><span class=\"typ\">Byte</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                    preparedStatement</span><span class=\"pun\">.</span><span class=\"pln\">setByte</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\">number</span><span class=\"pun\">.</span><span class=\"pln\">byteValue</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">o </span><span class=\"kwd\">instanceof</span><span class=\"pln\"> </span><span class=\"typ\">Short</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                    preparedStatement</span><span class=\"pun\">.</span><span class=\"pln\">setShort</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\">number</span><span class=\"pun\">.</span><span class=\"pln\">shortValue</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">o </span><span class=\"kwd\">instanceof</span><span class=\"pln\"> </span><span class=\"typ\">BigDecimal</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                    preparedStatement</span><span class=\"pun\">.</span><span class=\"pln\">setBigDecimal</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">+</span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">BigDecimal</span><span class=\"pun\">.</span><span class=\"pln\">valueOf</span><span class=\"pun\">(</span><span class=\"pln\">number</span><span class=\"pun\">.</span><span class=\"pln\">doubleValue</span><span class=\"pun\">()));</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L3\"><code><span class=\"pun\">}</span></code></li>\n  </ol></pre>\n <p>关于BeanAssignment 让我们下期再见</p> \n</body>', '', 'curd工具类', '', 1, NULL, '设计一个简单的增删查改工具类', NULL, '39a6c97d5d6d4f968c7ef07fecf5471b', 39, 7, 18, 1608812017975, '```\npackage cn.gjy.blog.framework.database;\n\nimport java.math.BigDecimal;\nimport java.sql.*;\nimport java.util.Date;\nimport java.util.List;\n\n/**\n * @author gujianyang\n * @date 2020/11/24\n * 增删查改工具类\n * 传递sql 值 自动绑定\n */\npublic class CurdTool {\n\n    public static int insertList(String sql, Connection connection,List<Object[]> values) throws SQLException {\n        int result=0;\n        try(PreparedStatement preparedStatement = connection.prepareStatement(sql)){\n            Object[] objects;\n            for (int i = 0; i < values.size(); i++) {\n                objects=values.get(i);\n                setPreparedStatementValues(preparedStatement,objects);\n                result+=preparedStatement.executeUpdate();\n            }\n        }\n        return result;\n    }\n\n    /**\n     *\n     * @param sql\n     * @param connection\n     * @param objects\n     * @return 修改，插入，更新条数，如果有多条sql，只返回第一个结果。\n     * @throws SQLException\n     */\n    public static int insert(String sql,Connection connection,Object... objects) throws SQLException {\n        try(PreparedStatement preparedStatement = connection.prepareStatement(sql)) {\n            setPreparedStatementValues(preparedStatement,objects);\n            return preparedStatement.executeUpdate();\n        }\n    }\n\n    public static int update(String sql,Connection connection,Object... objects) throws SQLException {\n        return insert(sql,connection,objects);\n    }\n\n    public static int delete(String sql,Connection connection,Object... objects) throws SQLException {\n        return insert(sql,connection,objects);\n    }\n\n    /**\n     * 获取多个结果集 返回一个 ArrayList\n     * @param sql\n     * @param connection\n     * @param t\n     * @param objects\n     * @param <T>\n     * @return\n     * @throws SQLException\n     * @throws IllegalAccessException\n     * @throws ClassNotFoundException\n     * @throws InstantiationException\n     */\n    public static <T> List<T> selectList(String sql,Connection connection,Class<T> t,Object... objects) throws SQLException, IllegalAccessException, ClassNotFoundException, InstantiationException {\n        ResultSet resultSet = null;\n        try(PreparedStatement preparedStatement=connection.prepareStatement(sql)) {\n            setPreparedStatementValues(preparedStatement,objects);\n            resultSet=preparedStatement.executeQuery();\n            return BeanAssignment.assignmentBeanList(resultSet,t);\n        }finally {\n            if(resultSet!=null)\n                resultSet.close();\n        }\n    }\n\n    public static <T> T[] selectArray(String sql,Connection connection,Class<T> t,Object... objects) throws SQLException, IllegalAccessException, ClassNotFoundException, InstantiationException {\n        ResultSet resultSet = null;\n        try(PreparedStatement preparedStatement=connection.prepareStatement(sql)) {\n            setPreparedStatementValues(preparedStatement,objects);\n            resultSet=preparedStatement.executeQuery();\n            return BeanAssignment.assignmentBeanArray(resultSet,t);\n        }finally {\n            if(resultSet!=null)\n                resultSet.close();\n        }\n    }\n\n    /**\n     * 获取单个结果集 如果有多个 只取第一个\n     * @param sql\n     * @param connection\n     * @param t\n     * @param objects\n     * @param <T> 实体类\n     * @return\n     * @throws SQLException\n     * @throws IllegalAccessException\n     * @throws ClassNotFoundException\n     * @throws InstantiationException\n     */\n    public static <T> T selectOne(String sql,Connection connection,Class<T> t,Object... objects) throws SQLException, IllegalAccessException, ClassNotFoundException, InstantiationException {\n        ResultSet resultSet = null;\n        try(PreparedStatement preparedStatement=connection.prepareStatement(sql)) {\n            setPreparedStatementValues(preparedStatement,objects);\n            resultSet=preparedStatement.executeQuery();\n            return BeanAssignment.assignmentBean(resultSet,t);\n        }finally {\n            if(resultSet!=null)\n                resultSet.close();\n        }\n    }\n\n    private static void setPreparedStatementValues(PreparedStatement preparedStatement,Object[] objects) throws SQLException {\n        Object o;\n        for (int i = 0; i < objects.length; i++) {\n            o=objects[i];\n            if(o==null){\n                preparedStatement.setNull(i+1, Types.NULL);\n            }else if(o instanceof String){\n                preparedStatement.setString(i+1,(String) o);\n            }else if(o instanceof Date){\n                preparedStatement.setDate(i+1, new java.sql.Date(((Date)o).getTime()));\n            }else if(o instanceof Number){\n                Number number= (Number) o;\n                if(o instanceof Integer){\n                    preparedStatement.setInt(i+1,number.intValue());\n                }else if(o instanceof Double){\n                    preparedStatement.setDouble(i+1,number.doubleValue());\n                }else if(o instanceof Long){\n                    preparedStatement.setLong(i+1,number.longValue());\n                }else if(o instanceof Float){\n                    preparedStatement.setFloat(i+1,number.floatValue());\n                }else if(o instanceof Byte){\n                    preparedStatement.setByte(i+1,number.byteValue());\n                }else if(o instanceof Short){\n                    preparedStatement.setShort(i+1,number.shortValue());\n                }else if(o instanceof BigDecimal){\n                    preparedStatement.setBigDecimal(i+1, BigDecimal.valueOf(number.doubleValue()));\n                }\n            }\n        }\n    }\n}\n\n```\n\n关于BeanAssignment 让我们下期再见', 1);
INSERT INTO `article` VALUES (18, '2020-12-24 20:26:35', NULL, 1, '<body>\n <p>在运行时反复使用反射获取对象的字段会增加耗时，所以，需要将这个类的所有字段信息进行缓存。<br>由于Class.getDeclaredFields只可以获取到这个类本身的所有字段，不能获取到其继承的父类的字段，所以我们需要将循环获取它的父类属性，直到没有父类为止。</p> \n <pre class=\"prettyprint linenums prettyprinted\" style=\"\">\n  <ol class=\"linenums\">\n   <li class=\"L0\"><code><span class=\"com\">//获取该类所有字段包括父类</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">Field</span><span class=\"pun\">[]</span><span class=\"pln\"> getClassAllFields</span><span class=\"pun\">(</span><span class=\"typ\">Class</span><span class=\"pun\">&lt;?&gt;</span><span class=\"pln\"> c</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"typ\">Field</span><span class=\"pun\">&gt;</span><span class=\"pln\"> fields </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">ArrayList</span><span class=\"pun\">&lt;&gt;(</span><span class=\"typ\">Arrays</span><span class=\"pun\">.</span><span class=\"pln\">asList</span><span class=\"pun\">(</span><span class=\"pln\">c</span><span class=\"pun\">.</span><span class=\"pln\">getDeclaredFields</span><span class=\"pun\">()));</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"kwd\">while</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">c</span><span class=\"pun\">.</span><span class=\"pln\">getSuperclass</span><span class=\"pun\">()!=</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">            c</span><span class=\"pun\">=</span><span class=\"pln\">c</span><span class=\"pun\">.</span><span class=\"pln\">getSuperclass</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">            fields</span><span class=\"pun\">.</span><span class=\"pln\">addAll</span><span class=\"pun\">(</span><span class=\"typ\">Arrays</span><span class=\"pun\">.</span><span class=\"pln\">asList</span><span class=\"pun\">(</span><span class=\"pln\">c</span><span class=\"pun\">.</span><span class=\"pln\">getDeclaredFields</span><span class=\"pun\">()));</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"typ\">Field</span><span class=\"pun\">[]</span><span class=\"pln\"> fs</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Field</span><span class=\"pun\">[</span><span class=\"pln\">fields</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">()];</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> i </span><span class=\"pun\">&lt;</span><span class=\"pln\"> fs</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">            fs</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]=</span><span class=\"pln\">fields</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> fs</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n  </ol></pre>\n <p>好了，接下来就是反射给对象赋值，是不是非常的简单</p> \n <pre class=\"prettyprint linenums prettyprinted\" style=\"\">\n  <ol class=\"linenums\">\n   <li class=\"L0\"><code><span class=\"kwd\">package</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">framework</span><span class=\"pun\">.</span><span class=\"pln\">database</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L1\"><code></code></li>\n   <li class=\"L2\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">framework</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">Alias</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L3\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">framework</span><span class=\"pun\">.</span><span class=\"pln\">annotation</span><span class=\"pun\">.</span><span class=\"typ\">UseHump</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L4\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">framework</span><span class=\"pun\">.</span><span class=\"pln\">config</span><span class=\"pun\">.</span><span class=\"typ\">FrameworkConfig</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L5\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">framework</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">.</span><span class=\"typ\">SimpleLog</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L6\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">framework</span><span class=\"pun\">.</span><span class=\"pln\">tool</span><span class=\"pun\">.</span><span class=\"typ\">ClassTool</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L7\"><code><span class=\"kwd\">import</span><span class=\"pln\"> cn</span><span class=\"pun\">.</span><span class=\"pln\">gjy</span><span class=\"pun\">.</span><span class=\"pln\">blog</span><span class=\"pun\">.</span><span class=\"pln\">model</span><span class=\"pun\">.</span><span class=\"typ\">DetailedArticle</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L8\"><code></code></li>\n   <li class=\"L9\"><code><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">lang</span><span class=\"pun\">.</span><span class=\"pln\">reflect</span><span class=\"pun\">.</span><span class=\"typ\">Array</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L0\"><code><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">lang</span><span class=\"pun\">.</span><span class=\"pln\">reflect</span><span class=\"pun\">.</span><span class=\"typ\">Field</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L1\"><code><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">sql</span><span class=\"pun\">.</span><span class=\"typ\">ResultSet</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L2\"><code><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">sql</span><span class=\"pun\">.</span><span class=\"typ\">ResultSetMetaData</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L3\"><code><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">sql</span><span class=\"pun\">.</span><span class=\"typ\">SQLException</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L4\"><code><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">sql</span><span class=\"pun\">.</span><span class=\"typ\">Types</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L5\"><code><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.*;</span></code></li>\n   <li class=\"L6\"><code><span class=\"kwd\">import</span><span class=\"pln\"> java</span><span class=\"pun\">.</span><span class=\"pln\">util</span><span class=\"pun\">.</span><span class=\"pln\">concurrent</span><span class=\"pun\">.</span><span class=\"typ\">ConcurrentHashMap</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L7\"><code></code></li>\n   <li class=\"L8\"><code><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">BeanAssignment</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L9\"><code></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">final</span><span class=\"pln\"> </span><span class=\"typ\">Map</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"typ\">BeanFieldsInfo</span><span class=\"pun\">&gt;</span><span class=\"pln\"> infoMap</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">ConcurrentHashMap</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L1\"><code></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">final</span><span class=\"pln\"> </span><span class=\"typ\">SimpleLog</span><span class=\"pln\"> log</span><span class=\"pun\">=</span><span class=\"typ\">SimpleLog</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"typ\">BeanAssignment</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L3\"><code></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">final</span><span class=\"pln\"> </span><span class=\"typ\">Set</span><span class=\"pun\">&lt;</span><span class=\"typ\">Class</span><span class=\"pun\">&lt;?&gt;&gt;</span><span class=\"pln\"> basicDataClassSet</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashSet</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L5\"><code></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">final</span><span class=\"pln\"> </span><span class=\"typ\">Map</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"typ\">Class</span><span class=\"pun\">&lt;?&gt;&gt;</span><span class=\"pln\"> basicObjectMap</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashMap</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L7\"><code></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">Set</span><span class=\"pun\">&lt;</span><span class=\"typ\">Class</span><span class=\"pun\">&lt;?&gt;&gt;</span><span class=\"pln\"> getBasicDataClassSet</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> basicDataClassSet</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        basicDataClassSet</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"typ\">Integer</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        basicDataClassSet</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        basicDataClassSet</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        basicDataClassSet</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"typ\">Long</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        basicDataClassSet</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"kwd\">long</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">        basicDataClassSet</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"kwd\">short</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">        basicDataClassSet</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"typ\">Short</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        basicDataClassSet</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"typ\">Double</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        basicDataClassSet</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"kwd\">double</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        basicDataClassSet</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"kwd\">float</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        basicDataClassSet</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"typ\">Float</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        basicDataClassSet</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"kwd\">byte</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        basicDataClassSet</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"typ\">Byte</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        basicDataClassSet</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"typ\">Date</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        basicObjectMap</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"typ\">Integer</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">        basicObjectMap</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"kwd\">double</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"typ\">Double</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">        basicObjectMap</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"kwd\">long</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"typ\">Long</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        basicObjectMap</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"kwd\">short</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"typ\">Short</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        basicObjectMap</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"kwd\">float</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"typ\">Float</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        basicObjectMap</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"kwd\">byte</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"typ\">Byte</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        basicObjectMap</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"kwd\">boolean</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"typ\">Boolean</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L5\"><code></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> T assignmentBean</span><span class=\"pun\">(</span><span class=\"typ\">ResultSet</span><span class=\"pln\"> resultSet</span><span class=\"pun\">,</span><span class=\"typ\">Class</span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> tClass</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">SQLException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">IllegalAccessException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">InstantiationException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">ClassNotFoundException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(!</span><span class=\"pln\">resultSet</span><span class=\"pun\">.</span><span class=\"kwd\">next</span><span class=\"pun\">()){</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">null</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(!</span><span class=\"pln\">resultSet</span><span class=\"pun\">.</span><span class=\"pln\">isLast</span><span class=\"pun\">())</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"typ\">FrameworkConfig</span><span class=\"pun\">.</span><span class=\"pln\">dbTooMuchResultException</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"返回结果不唯一!\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">            log</span><span class=\"pun\">.</span><span class=\"pln\">e</span><span class=\"pun\">(</span><span class=\"str\">\"有多个结果被丢弃，因为当前转换模式为:转换单个对象\"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> assignmentBean</span><span class=\"pun\">(</span><span class=\"pln\">resultSet</span><span class=\"pun\">,</span><span class=\"pln\">tClass</span><span class=\"pun\">,</span><span class=\"pln\">getBeanFields</span><span class=\"pun\">(</span><span class=\"pln\">tClass</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">()),</span><span class=\"pln\">resultSet</span><span class=\"pun\">.</span><span class=\"pln\">getMetaData</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L8\"><code></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> assignmentBeanList</span><span class=\"pun\">(</span><span class=\"typ\">ResultSet</span><span class=\"pln\"> resultSet</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Class</span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> tClass</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">SQLException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">IllegalAccessException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">InstantiationException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">ClassNotFoundException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> list</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">ArrayList</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">while</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">resultSet</span><span class=\"pun\">.</span><span class=\"kwd\">next</span><span class=\"pun\">()){</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">            list</span><span class=\"pun\">.</span><span class=\"pln\">add</span><span class=\"pun\">(</span><span class=\"pln\">assignmentBean</span><span class=\"pun\">(</span><span class=\"pln\">resultSet</span><span class=\"pun\">,</span><span class=\"pln\">tClass</span><span class=\"pun\">,</span><span class=\"pln\">getBeanFields</span><span class=\"pun\">(</span><span class=\"pln\">tClass</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">()),</span><span class=\"pln\">resultSet</span><span class=\"pun\">.</span><span class=\"pln\">getMetaData</span><span class=\"pun\">()));</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> list</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L6\"><code></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"lit\">@SuppressWarnings</span><span class=\"pun\">(</span><span class=\"str\">\"unchecked\"</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> T</span><span class=\"pun\">[]</span><span class=\"pln\"> assignmentBeanArray</span><span class=\"pun\">(</span><span class=\"typ\">ResultSet</span><span class=\"pln\"> resultSet</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Class</span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> tClass</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">SQLException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">ClassNotFoundException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">InstantiationException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">IllegalAccessException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"typ\">List</span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> list</span><span class=\"pun\">=</span><span class=\"pln\">assignmentBeanList</span><span class=\"pun\">(</span><span class=\"pln\">resultSet</span><span class=\"pun\">,</span><span class=\"pln\">tClass</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        T</span><span class=\"pun\">[]</span><span class=\"pln\"> arr</span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">T</span><span class=\"pun\">[])</span><span class=\"pln\"> </span><span class=\"typ\">Array</span><span class=\"pun\">.</span><span class=\"pln\">newInstance</span><span class=\"pun\">(</span><span class=\"pln\">tClass</span><span class=\"pun\">,</span><span class=\"pln\">list</span><span class=\"pun\">.</span><span class=\"pln\">size</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> i </span><span class=\"pun\">&lt;</span><span class=\"pln\"> arr</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"typ\">Array</span><span class=\"pun\">.</span><span class=\"kwd\">set</span><span class=\"pun\">(</span><span class=\"pln\">arr</span><span class=\"pun\">,</span><span class=\"pln\">i</span><span class=\"pun\">,</span><span class=\"pln\">list</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">));</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> arr</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L6\"><code></code></li>\n   <li class=\"L7\"><code></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"lit\">@SuppressWarnings</span><span class=\"pun\">(</span><span class=\"str\">\"unchecked\"</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\">  </span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> T assignmentBean</span><span class=\"pun\">(</span><span class=\"typ\">ResultSet</span><span class=\"pln\"> resultSet</span><span class=\"pun\">,</span><span class=\"typ\">Class</span><span class=\"pun\">&lt;</span><span class=\"pln\">T</span><span class=\"pun\">&gt;</span><span class=\"pln\"> tClass</span><span class=\"pun\">,</span><span class=\"typ\">BeanFieldsInfo</span><span class=\"pln\"> info</span><span class=\"pun\">,</span><span class=\"typ\">ResultSetMetaData</span><span class=\"pln\"> metaData</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">SQLException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">IllegalAccessException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">InstantiationException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"typ\">Map</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">.</span><span class=\"pln\">isAssignableFrom</span><span class=\"pun\">(</span><span class=\"pln\">tClass</span><span class=\"pun\">)){</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">T</span><span class=\"pun\">)</span><span class=\"pln\"> valueToMap</span><span class=\"pun\">(</span><span class=\"pln\">resultSet</span><span class=\"pun\">,</span><span class=\"pln\">resultSet</span><span class=\"pun\">.</span><span class=\"pln\">getMetaData</span><span class=\"pun\">(),</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">Class</span><span class=\"pun\">&lt;?</span><span class=\"pln\"> </span><span class=\"kwd\">extends</span><span class=\"pln\"> </span><span class=\"typ\">Map</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Object</span><span class=\"pun\">&gt;&gt;)</span><span class=\"pln\"> tClass</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">getBasicDataClassSet</span><span class=\"pun\">().</span><span class=\"pln\">contains</span><span class=\"pun\">(</span><span class=\"pln\">tClass</span><span class=\"pun\">)){</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"com\">//普通的数据结构</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">metaData</span><span class=\"pun\">.</span><span class=\"pln\">getColumnCount</span><span class=\"pun\">()==</span><span class=\"lit\">1</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                </span><span class=\"typ\">Object</span><span class=\"pln\"> </span><span class=\"kwd\">object</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> resultSet</span><span class=\"pun\">.</span><span class=\"pln\">getObject</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">object</span><span class=\"pun\">!=</span><span class=\"kwd\">null</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                    </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"kwd\">object</span><span class=\"pun\">.</span><span class=\"pln\">getClass</span><span class=\"pun\">().</span><span class=\"pln\">equals</span><span class=\"pun\">(</span><span class=\"pln\">tClass</span><span class=\"pun\">)){</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">T</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">object</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"kwd\">object</span><span class=\"pln\"> </span><span class=\"kwd\">instanceof</span><span class=\"pln\"> </span><span class=\"typ\">Number</span><span class=\"pun\">&amp;&amp;</span><span class=\"typ\">Number</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">.</span><span class=\"pln\">isAssignableFrom</span><span class=\"pun\">(</span><span class=\"pln\">tClass</span><span class=\"pun\">)||</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                            basicDataClassSet</span><span class=\"pun\">.</span><span class=\"pln\">contains</span><span class=\"pun\">(</span><span class=\"pln\">tClass</span><span class=\"pun\">)){</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                        </span><span class=\"typ\">Number</span><span class=\"pln\"> number</span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"typ\">Number</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">object</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">tClass</span><span class=\"pun\">==</span><span class=\"typ\">Integer</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">||</span><span class=\"pln\">tClass</span><span class=\"pun\">==</span><span class=\"kwd\">int</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">T</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Integer</span><span class=\"pun\">(</span><span class=\"pln\">number</span><span class=\"pun\">.</span><span class=\"pln\">intValue</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                        </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">tClass</span><span class=\"pun\">==</span><span class=\"typ\">Double</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">||</span><span class=\"pln\">tClass</span><span class=\"pun\">==</span><span class=\"kwd\">double</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">T</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Double</span><span class=\"pun\">(</span><span class=\"pln\">number</span><span class=\"pun\">.</span><span class=\"pln\">doubleValue</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                        </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">tClass</span><span class=\"pun\">==</span><span class=\"typ\">Long</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">||</span><span class=\"pln\">tClass</span><span class=\"pun\">==</span><span class=\"kwd\">long</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">)</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                            </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">T</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Long</span><span class=\"pun\">(</span><span class=\"pln\">number</span><span class=\"pun\">.</span><span class=\"pln\">longValue</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                        </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                            log</span><span class=\"pun\">.</span><span class=\"pln\">e</span><span class=\"pun\">(</span><span class=\"str\">\"无法将:\"</span><span class=\"pun\">+</span><span class=\"kwd\">object</span><span class=\"pun\">.</span><span class=\"pln\">getClass</span><span class=\"pun\">().</span><span class=\"pln\">getName</span><span class=\"pun\">()+</span><span class=\"str\">\" 转换到:\"</span><span class=\"pun\">+</span><span class=\"pln\">tClass</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                            </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"无法将:\"</span><span class=\"pun\">+</span><span class=\"kwd\">object</span><span class=\"pun\">.</span><span class=\"pln\">getClass</span><span class=\"pun\">().</span><span class=\"pln\">getName</span><span class=\"pun\">()+</span><span class=\"str\">\" 转换到:\"</span><span class=\"pun\">+</span><span class=\"pln\">tClass</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">tClass</span><span class=\"pun\">==</span><span class=\"typ\">String</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                        </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">T</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">object</span><span class=\"pun\">.</span><span class=\"pln\">toString</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pun\">{</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                        log</span><span class=\"pun\">.</span><span class=\"pln\">e</span><span class=\"pun\">(</span><span class=\"str\">\"无法将: \"</span><span class=\"pun\">+</span><span class=\"kwd\">object</span><span class=\"pun\">.</span><span class=\"pln\">getClass</span><span class=\"pun\">().</span><span class=\"pln\">getName</span><span class=\"pun\">()+</span><span class=\"str\">\" 转换到:\"</span><span class=\"pun\">+</span><span class=\"pln\">tClass</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                        </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"无法将:\"</span><span class=\"pun\">+</span><span class=\"kwd\">object</span><span class=\"pun\">.</span><span class=\"pln\">getClass</span><span class=\"pun\">().</span><span class=\"pln\">getName</span><span class=\"pun\">()+</span><span class=\"str\">\" 转换到:\"</span><span class=\"pun\">+</span><span class=\"pln\">tClass</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span><span class=\"kwd\">else</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                    </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"kwd\">null</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"kwd\">else</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"结果集列数不唯一  :\"</span><span class=\"pun\">+</span><span class=\"pln\">tClass</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">tClass</span><span class=\"pun\">.</span><span class=\"pln\">isInterface</span><span class=\"pun\">()){</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">            </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"interface can\'t instance  :\"</span><span class=\"pun\">+</span><span class=\"pln\">tClass</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">(!</span><span class=\"pln\">tClass</span><span class=\"pun\">.</span><span class=\"pln\">getName</span><span class=\"pun\">().</span><span class=\"pln\">startsWith</span><span class=\"pun\">(</span><span class=\"typ\">FrameworkConfig</span><span class=\"pun\">.</span><span class=\"pln\">basePackage</span><span class=\"pun\">)){</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"kwd\">throw</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">RuntimeException</span><span class=\"pun\">(</span><span class=\"str\">\"无法序列化  :\"</span><span class=\"pun\">+</span><span class=\"pln\">tClass</span><span class=\"pun\">+</span><span class=\"str\">\" \"</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">        T t</span><span class=\"pun\">=</span><span class=\"pln\">tClass</span><span class=\"pun\">.</span><span class=\"pln\">newInstance</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"typ\">Field</span><span class=\"pln\"> field</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">,</span><span class=\"pln\">l</span><span class=\"pun\">=</span><span class=\"pln\">metaData</span><span class=\"pun\">.</span><span class=\"pln\">getColumnCount</span><span class=\"pun\">();</span><span class=\"pln\"> i </span><span class=\"pun\">&lt;=</span><span class=\"pln\"> l</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">((</span><span class=\"pln\">field</span><span class=\"pun\">=</span><span class=\"pln\">info</span><span class=\"pun\">.</span><span class=\"pln\">fieldMap</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">metaData</span><span class=\"pun\">.</span><span class=\"pln\">getColumnLabel</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">)))!=</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                </span><span class=\"kwd\">int</span><span class=\"pln\"> type</span><span class=\"pun\">=</span><span class=\"pln\">metaData</span><span class=\"pun\">.</span><span class=\"pln\">getColumnType</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                </span><span class=\"kwd\">switch</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">type</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                    </span><span class=\"kwd\">case</span><span class=\"pln\"> </span><span class=\"typ\">Types</span><span class=\"pun\">.</span><span class=\"pln\">INTEGER</span><span class=\"pun\">:</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                    </span><span class=\"kwd\">case</span><span class=\"pln\"> </span><span class=\"typ\">Types</span><span class=\"pun\">.</span><span class=\"pln\">SMALLINT</span><span class=\"pun\">:</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                    </span><span class=\"kwd\">case</span><span class=\"pln\"> </span><span class=\"typ\">Types</span><span class=\"pun\">.</span><span class=\"pln\">FLOAT</span><span class=\"pun\">:</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                    </span><span class=\"kwd\">case</span><span class=\"pln\"> </span><span class=\"typ\">Types</span><span class=\"pun\">.</span><span class=\"pln\">DOUBLE</span><span class=\"pun\">:</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                    </span><span class=\"kwd\">case</span><span class=\"pln\"> </span><span class=\"typ\">Types</span><span class=\"pun\">.</span><span class=\"pln\">BIGINT</span><span class=\"pun\">:</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                    </span><span class=\"kwd\">case</span><span class=\"pln\"> </span><span class=\"typ\">Types</span><span class=\"pun\">.</span><span class=\"pln\">TINYINT</span><span class=\"pun\">:</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                        </span><span class=\"typ\">TypeParseEngine</span><span class=\"pun\">.</span><span class=\"pln\">parseNumber</span><span class=\"pun\">(</span><span class=\"pln\">type</span><span class=\"pun\">,</span><span class=\"pln\">t</span><span class=\"pun\">,</span><span class=\"pln\">field</span><span class=\"pun\">,</span><span class=\"pln\">resultSet</span><span class=\"pun\">,</span><span class=\"pln\">i</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                        </span><span class=\"kwd\">break</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                    </span><span class=\"kwd\">case</span><span class=\"pln\"> </span><span class=\"typ\">Types</span><span class=\"pun\">.</span><span class=\"pln\">NUMERIC</span><span class=\"pun\">:</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                        </span><span class=\"typ\">TypeParseEngine</span><span class=\"pun\">.</span><span class=\"pln\">parseNumeric</span><span class=\"pun\">(</span><span class=\"pln\">type</span><span class=\"pun\">,</span><span class=\"pln\">t</span><span class=\"pun\">,</span><span class=\"pln\">field</span><span class=\"pun\">,</span><span class=\"pln\">resultSet</span><span class=\"pun\">,</span><span class=\"pln\">i</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                        </span><span class=\"kwd\">break</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                    </span><span class=\"kwd\">case</span><span class=\"pln\"> </span><span class=\"typ\">Types</span><span class=\"pun\">.</span><span class=\"pln\">LONGVARCHAR</span><span class=\"pun\">:</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                    </span><span class=\"kwd\">case</span><span class=\"pln\"> </span><span class=\"typ\">Types</span><span class=\"pun\">.</span><span class=\"pln\">LONGNVARCHAR</span><span class=\"pun\">:</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                    </span><span class=\"kwd\">case</span><span class=\"pln\"> </span><span class=\"typ\">Types</span><span class=\"pun\">.</span><span class=\"pln\">CHAR</span><span class=\"pun\">:</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                    </span><span class=\"kwd\">case</span><span class=\"pln\"> </span><span class=\"typ\">Types</span><span class=\"pun\">.</span><span class=\"pln\">VARCHAR</span><span class=\"pun\">:</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                        </span><span class=\"typ\">TypeParseEngine</span><span class=\"pun\">.</span><span class=\"pln\">parseString</span><span class=\"pun\">(</span><span class=\"pln\">type</span><span class=\"pun\">,</span><span class=\"pln\">t</span><span class=\"pun\">,</span><span class=\"pln\">field</span><span class=\"pun\">,</span><span class=\"pln\">resultSet</span><span class=\"pun\">,</span><span class=\"pln\">i</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                        </span><span class=\"kwd\">break</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                    </span><span class=\"kwd\">case</span><span class=\"pln\"> </span><span class=\"typ\">Types</span><span class=\"pun\">.</span><span class=\"pln\">BIT</span><span class=\"pun\">:</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                        </span><span class=\"typ\">TypeParseEngine</span><span class=\"pun\">.</span><span class=\"pln\">parseBit</span><span class=\"pun\">(</span><span class=\"pln\">type</span><span class=\"pun\">,</span><span class=\"pln\">t</span><span class=\"pun\">,</span><span class=\"pln\">field</span><span class=\"pun\">,</span><span class=\"pln\">resultSet</span><span class=\"pun\">,</span><span class=\"pln\">i</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">                        </span><span class=\"kwd\">break</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                    </span><span class=\"kwd\">case</span><span class=\"pln\"> </span><span class=\"typ\">Types</span><span class=\"pun\">.</span><span class=\"pln\">DATE</span><span class=\"pun\">:</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">                    </span><span class=\"kwd\">case</span><span class=\"pln\"> </span><span class=\"typ\">Types</span><span class=\"pun\">.</span><span class=\"pln\">TIME</span><span class=\"pun\">:</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">                    </span><span class=\"kwd\">case</span><span class=\"pln\"> </span><span class=\"typ\">Types</span><span class=\"pun\">.</span><span class=\"pln\">TIMESTAMP</span><span class=\"pun\">:</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">                        </span><span class=\"typ\">TypeParseEngine</span><span class=\"pun\">.</span><span class=\"pln\">parseData</span><span class=\"pun\">(</span><span class=\"pln\">type</span><span class=\"pun\">,</span><span class=\"pln\">t</span><span class=\"pun\">,</span><span class=\"pln\">field</span><span class=\"pun\">,</span><span class=\"pln\">resultSet</span><span class=\"pun\">,</span><span class=\"pln\">i</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                        </span><span class=\"kwd\">break</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> t</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L4\"><code></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">Map</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"typ\">Object</span><span class=\"pun\">&gt;</span><span class=\"pln\"> valueToMap</span><span class=\"pun\">(</span><span class=\"typ\">ResultSet</span><span class=\"pln\"> resultSet</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">ResultSetMetaData</span><span class=\"pln\"> metaData</span><span class=\"pun\">,</span><span class=\"typ\">Class</span><span class=\"pun\">&lt;?</span><span class=\"pln\"> </span><span class=\"kwd\">extends</span><span class=\"pln\"> </span><span class=\"typ\">Map</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"typ\">Object</span><span class=\"pun\">&gt;&gt;</span><span class=\"pln\"> returnClass</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">SQLException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">IllegalAccessException</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">InstantiationException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"typ\">Map</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"typ\">Object</span><span class=\"pun\">&gt;</span><span class=\"pln\"> map</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">returnClass</span><span class=\"pun\">.</span><span class=\"pln\">isInterface</span><span class=\"pun\">()){</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">            map</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashMap</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">            map</span><span class=\"pun\">=</span><span class=\"pln\"> returnClass</span><span class=\"pun\">.</span><span class=\"pln\">newInstance</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">1</span><span class=\"pun\">;</span><span class=\"pln\"> i </span><span class=\"pun\">&lt;=</span><span class=\"pln\"> metaData</span><span class=\"pun\">.</span><span class=\"pln\">getColumnCount</span><span class=\"pun\">();</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            map</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">metaData</span><span class=\"pun\">.</span><span class=\"pln\">getColumnLabel</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">),</span><span class=\"pln\">resultSet</span><span class=\"pun\">.</span><span class=\"pln\">getObject</span><span class=\"pun\">(</span><span class=\"pln\">i</span><span class=\"pun\">));</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> map</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L7\"><code></code></li>\n   <li class=\"L8\"><code></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">BeanFieldsInfo</span><span class=\"pln\"> getBeanFields</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pln\"> className</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">ClassNotFoundException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(!</span><span class=\"pln\">infoMap</span><span class=\"pun\">.</span><span class=\"pln\">containsKey</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">)){</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">            infoMap</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">,</span><span class=\"pln\">createBeanInfo</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">));</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> infoMap</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L5\"><code></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"com\">//缓存class字段信息</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">synchronized</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">BeanFieldsInfo</span><span class=\"pln\"> createBeanInfo</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pln\"> className</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">throws</span><span class=\"pln\"> </span><span class=\"typ\">ClassNotFoundException</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">infoMap</span><span class=\"pun\">.</span><span class=\"pln\">containsKey</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">)){</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">            </span><span class=\"kwd\">return</span><span class=\"pln\"> infoMap</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"com\">//判断是否是基本数据</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"typ\">Class</span><span class=\"pun\">&lt;?&gt;</span><span class=\"pln\"> c</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">()&lt;</span><span class=\"lit\">8</span><span class=\"pun\">&amp;&amp;</span><span class=\"pln\">basicObjectMap</span><span class=\"pun\">.</span><span class=\"pln\">containsKey</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">)){</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">            c</span><span class=\"pun\">=</span><span class=\"pln\">basicObjectMap</span><span class=\"pun\">.</span><span class=\"kwd\">get</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">            c</span><span class=\"pun\">=</span><span class=\"typ\">Class</span><span class=\"pun\">.</span><span class=\"pln\">forName</span><span class=\"pun\">(</span><span class=\"pln\">className</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"typ\">BeanFieldsInfo</span><span class=\"pln\"> info</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">BeanFieldsInfo</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">        info</span><span class=\"pun\">.</span><span class=\"pln\">fieldMap</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">HashMap</span><span class=\"pun\">&lt;&gt;();</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"typ\">Field</span><span class=\"pun\">[]</span><span class=\"pln\"> fields </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">ClassTool</span><span class=\"pun\">.</span><span class=\"pln\">getClassAllFields</span><span class=\"pun\">(</span><span class=\"pln\">c</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        info</span><span class=\"pun\">.</span><span class=\"pln\">classes</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Class</span><span class=\"pun\">[</span><span class=\"pln\">fields</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">];</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"typ\">Alias</span><span class=\"pln\"> </span><span class=\"kwd\">alias</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"typ\">UseHump</span><span class=\"pln\"> useHump</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\">l</span><span class=\"pun\">=</span><span class=\"pln\">fields</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">;</span><span class=\"pln\"> i </span><span class=\"pun\">&lt;</span><span class=\"pln\"> l</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">            fields</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">setAccessible</span><span class=\"pun\">(</span><span class=\"kwd\">true</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">            info</span><span class=\"pun\">.</span><span class=\"pln\">classes</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]=</span><span class=\"pln\">fields</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getDeclaringClass</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">((</span><span class=\"kwd\">alias</span><span class=\"pun\">=</span><span class=\"pln\">fields</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">Alias</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">))!=</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                </span><span class=\"com\">//别名 和字段名 都可以使用</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                info</span><span class=\"pun\">.</span><span class=\"pln\">fieldMap</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"kwd\">alias</span><span class=\"pun\">.</span><span class=\"pln\">value</span><span class=\"pun\">(),</span><span class=\"pln\">fields</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]);</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">                info</span><span class=\"pun\">.</span><span class=\"pln\">fieldMap</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">fields</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"pln\">fields</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]);</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"kwd\">if</span><span class=\"pun\">((</span><span class=\"pln\">useHump</span><span class=\"pun\">=</span><span class=\"pln\">c</span><span class=\"pun\">.</span><span class=\"pln\">getAnnotation</span><span class=\"pun\">(</span><span class=\"typ\">UseHump</span><span class=\"pun\">.</span><span class=\"kwd\">class</span><span class=\"pun\">))!=</span><span class=\"kwd\">null</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">                info</span><span class=\"pun\">.</span><span class=\"pln\">fieldMap</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">changeHumpToLowerCase</span><span class=\"pun\">(</span><span class=\"pln\">fields</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"pln\">useHump</span><span class=\"pun\">),</span><span class=\"pln\">fields</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]);</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pun\">{</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">                info</span><span class=\"pun\">.</span><span class=\"pln\">fieldMap</span><span class=\"pun\">.</span><span class=\"pln\">put</span><span class=\"pun\">(</span><span class=\"pln\">fields</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">].</span><span class=\"pln\">getName</span><span class=\"pun\">(),</span><span class=\"pln\">fields</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]);</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> info</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L9\"><code></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"typ\">String</span><span class=\"pln\"> changeHumpToLowerCase</span><span class=\"pun\">(</span><span class=\"typ\">String</span><span class=\"pln\"> str</span><span class=\"pun\">,</span><span class=\"typ\">UseHump</span><span class=\"pln\"> useHump</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"typ\">StringBuilder</span><span class=\"pln\"> sb</span><span class=\"pun\">=</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">StringBuilder</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"kwd\">char</span><span class=\"pun\">[]</span><span class=\"pln\"> arr</span><span class=\"pun\">=</span><span class=\"pln\">str</span><span class=\"pun\">.</span><span class=\"pln\">toCharArray</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"kwd\">int</span><span class=\"pln\"> start</span><span class=\"pun\">=</span><span class=\"str\">\'A\'</span><span class=\"pun\">+(</span><span class=\"pln\">useHump</span><span class=\"pun\">.</span><span class=\"pln\">value</span><span class=\"pun\">()==</span><span class=\"typ\">UseHump</span><span class=\"pun\">.</span><span class=\"typ\">Change</span><span class=\"pun\">.</span><span class=\"pln\">HUMP_TO_LOWER</span><span class=\"pun\">?</span><span class=\"lit\">0</span><span class=\"pun\">:</span><span class=\"lit\">32</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">int</span><span class=\"pln\"> </span><span class=\"kwd\">end</span><span class=\"pun\">=</span><span class=\"str\">\'Z\'</span><span class=\"pun\">+(</span><span class=\"pln\">useHump</span><span class=\"pun\">.</span><span class=\"pln\">value</span><span class=\"pun\">()==</span><span class=\"typ\">UseHump</span><span class=\"pun\">.</span><span class=\"typ\">Change</span><span class=\"pun\">.</span><span class=\"pln\">HUMP_TO_LOWER</span><span class=\"pun\">?</span><span class=\"lit\">0</span><span class=\"pun\">:</span><span class=\"lit\">32</span><span class=\"pun\">);</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">int</span><span class=\"pln\"> change</span><span class=\"pun\">=</span><span class=\"pln\">useHump</span><span class=\"pun\">.</span><span class=\"pln\">value</span><span class=\"pun\">()==</span><span class=\"typ\">UseHump</span><span class=\"pun\">.</span><span class=\"typ\">Change</span><span class=\"pun\">.</span><span class=\"pln\">HUMP_TO_LOWER</span><span class=\"pun\">?</span><span class=\"lit\">32</span><span class=\"pun\">:-</span><span class=\"lit\">32</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">for</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"kwd\">int</span><span class=\"pln\"> i </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"> i </span><span class=\"pun\">&lt;</span><span class=\"pln\"> arr</span><span class=\"pun\">.</span><span class=\"pln\">length</span><span class=\"pun\">;</span><span class=\"pln\"> i</span><span class=\"pun\">++)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pun\">(</span><span class=\"pln\">arr</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]&gt;=</span><span class=\"pln\">start</span><span class=\"pun\">&amp;&amp;</span><span class=\"pln\">arr</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]&lt;=</span><span class=\"kwd\">end</span><span class=\"pun\">){</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">                sb</span><span class=\"pun\">.</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"pln\">useHump</span><span class=\"pun\">.</span><span class=\"pln\">separator</span><span class=\"pun\">());</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">                sb</span><span class=\"pun\">.</span><span class=\"pln\">append</span><span class=\"pun\">((</span><span class=\"kwd\">char</span><span class=\"pun\">)(</span><span class=\"pln\">arr</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]+</span><span class=\"pln\">change</span><span class=\"pun\">));</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li>\n   <li class=\"L1\"><code><span class=\"pln\">                sb</span><span class=\"pun\">.</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"pln\">arr</span><span class=\"pun\">[</span><span class=\"pln\">i</span><span class=\"pun\">]);</span></code></li>\n   <li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> sb</span><span class=\"pun\">.</span><span class=\"pln\">toString</span><span class=\"pun\">();</span></code></li>\n   <li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L6\"><code></code></li>\n   <li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"kwd\">static</span><span class=\"pln\"> </span><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">BeanFieldsInfo</span><span class=\"pun\">{</span></code></li>\n   <li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">Map</span><span class=\"pun\">&lt;</span><span class=\"typ\">String</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">Field</span><span class=\"pun\">&gt;</span><span class=\"pln\"> fieldMap</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L9\"><code><span class=\"pln\">        </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">Class</span><span class=\"pun\">&lt;?&gt;[]</span><span class=\"pln\"> classes</span><span class=\"pun\">;</span></code></li>\n   <li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li>\n   <li class=\"L1\"><code></code></li>\n   <li class=\"L2\"><code><span class=\"pun\">}</span></code></li>\n  </ol></pre>\n</body>', '', '序列化', '', 1, NULL, '设计一个简单的序列化工具类', NULL, 'db8e844245cf4a4f9780fe669c59800c', 39, 7, 18, 1608812795158, '在运行时反复使用反射获取对象的字段会增加耗时，所以，需要将这个类的所有字段信息进行缓存。\n由于Class.getDeclaredFields只可以获取到这个类本身的所有字段，不能获取到其继承的父类的字段，所以我们需要将循环获取它的父类属性，直到没有父类为止。\n\n```\n//获取该类所有字段包括父类\n    public static Field[] getClassAllFields(Class<?> c){\n        List<Field> fields = new ArrayList<>(Arrays.asList(c.getDeclaredFields()));\n        while (c.getSuperclass()!=null){\n            c=c.getSuperclass();\n            fields.addAll(Arrays.asList(c.getDeclaredFields()));\n        }\n        Field[] fs=new Field[fields.size()];\n        for (int i = 0; i < fs.length; i++) {\n            fs[i]=fields.get(i);\n        }\n        return fs;\n    }\n```\n\n好了，接下来就是反射给对象赋值，是不是非常的简单\n\n```\npackage cn.gjy.blog.framework.database;\n\nimport cn.gjy.blog.framework.annotation.Alias;\nimport cn.gjy.blog.framework.annotation.UseHump;\nimport cn.gjy.blog.framework.config.FrameworkConfig;\nimport cn.gjy.blog.framework.log.SimpleLog;\nimport cn.gjy.blog.framework.tool.ClassTool;\nimport cn.gjy.blog.model.DetailedArticle;\n\nimport java.lang.reflect.Array;\nimport java.lang.reflect.Field;\nimport java.sql.ResultSet;\nimport java.sql.ResultSetMetaData;\nimport java.sql.SQLException;\nimport java.sql.Types;\nimport java.util.*;\nimport java.util.concurrent.ConcurrentHashMap;\n\npublic class BeanAssignment {\n\n    private static final Map<String,BeanFieldsInfo> infoMap=new ConcurrentHashMap<>();\n\n    private static final SimpleLog log=SimpleLog.log(BeanAssignment.class);\n\n    private static final Set<Class<?>> basicDataClassSet=new HashSet<>();\n\n    private static final Map<String,Class<?>> basicObjectMap=new HashMap<>();\n\n    public static Set<Class<?>> getBasicDataClassSet() {\n        return basicDataClassSet;\n    }\n\n    static {\n        basicDataClassSet.add(Integer.class);\n        basicDataClassSet.add(int.class);\n        basicDataClassSet.add(String.class);\n        basicDataClassSet.add(Long.class);\n        basicDataClassSet.add(long.class);\n        basicDataClassSet.add(short.class);\n        basicDataClassSet.add(Short.class);\n        basicDataClassSet.add(Double.class);\n        basicDataClassSet.add(double.class);\n        basicDataClassSet.add(float.class);\n        basicDataClassSet.add(Float.class);\n        basicDataClassSet.add(byte.class);\n        basicDataClassSet.add(Byte.class);\n        basicDataClassSet.add(Date.class);\n        basicObjectMap.put(int.class.getName(),Integer.class);\n        basicObjectMap.put(double.class.getName(),Double.class);\n        basicObjectMap.put(long.class.getName(),Long.class);\n        basicObjectMap.put(short.class.getName(),Short.class);\n        basicObjectMap.put(float.class.getName(),Float.class);\n        basicObjectMap.put(byte.class.getName(),Byte.class);\n        basicObjectMap.put(boolean.class.getName(),Boolean.class);\n    }\n\n    public static <T> T assignmentBean(ResultSet resultSet,Class<T> tClass) throws SQLException, IllegalAccessException, InstantiationException, ClassNotFoundException {\n        if(!resultSet.next()){\n            return null;\n        }\n        if (!resultSet.isLast()) {\n            if(FrameworkConfig.dbTooMuchResultException){\n                throw new RuntimeException(\"返回结果不唯一!\");\n            }\n            log.e(\"有多个结果被丢弃，因为当前转换模式为:转换单个对象\");\n        }\n        return assignmentBean(resultSet,tClass,getBeanFields(tClass.getName()),resultSet.getMetaData());\n    }\n\n    public static <T> List<T> assignmentBeanList(ResultSet resultSet, Class<T> tClass) throws SQLException, IllegalAccessException, InstantiationException, ClassNotFoundException {\n        List<T> list=new ArrayList<>();\n        while (resultSet.next()){\n            list.add(assignmentBean(resultSet,tClass,getBeanFields(tClass.getName()),resultSet.getMetaData()));\n        }\n        return list;\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    public static <T> T[] assignmentBeanArray(ResultSet resultSet, Class<T> tClass) throws SQLException, ClassNotFoundException, InstantiationException, IllegalAccessException {\n        List<T> list=assignmentBeanList(resultSet,tClass);\n        T[] arr= (T[]) Array.newInstance(tClass,list.size());\n        for (int i = 0; i < arr.length; i++) {\n            Array.set(arr,i,list.get(i));\n        }\n        return arr;\n    }\n\n\n    @SuppressWarnings(\"unchecked\")\n    private static  <T> T assignmentBean(ResultSet resultSet,Class<T> tClass,BeanFieldsInfo info,ResultSetMetaData metaData) throws SQLException, IllegalAccessException, InstantiationException {\n        if(Map.class.isAssignableFrom(tClass)){\n            return (T) valueToMap(resultSet,resultSet.getMetaData(), (Class<? extends Map<String, Object>>) tClass);\n        }else if(getBasicDataClassSet().contains(tClass)){\n            //普通的数据结构\n            if(metaData.getColumnCount()==1){\n                Object object = resultSet.getObject(1);\n                if (object!=null) {\n                    if(object.getClass().equals(tClass)){\n                        return (T) object;\n                    }else if(object instanceof Number&&Number.class.isAssignableFrom(tClass)||\n                            basicDataClassSet.contains(tClass)){\n                        Number number= (Number) object;\n                        if(tClass==Integer.class||tClass==int.class)\n                            return (T) new Integer(number.intValue());\n                        else if(tClass==Double.class||tClass==double.class)\n                            return (T) new Double(number.doubleValue());\n                        else if(tClass==Long.class||tClass==long.class)\n                            return (T) new Long(number.longValue());\n                        else {\n                            log.e(\"无法将:\"+object.getClass().getName()+\" 转换到:\"+tClass.getName());\n                            throw new RuntimeException(\"无法将:\"+object.getClass().getName()+\" 转换到:\"+tClass.getName());\n                        }\n                    }else if(tClass==String.class){\n                        return (T) object.toString();\n                    } else{\n                        log.e(\"无法将: \"+object.getClass().getName()+\" 转换到:\"+tClass.getName());\n                        throw new RuntimeException(\"无法将:\"+object.getClass().getName()+\" 转换到:\"+tClass.getName());\n                    }\n                }else\n                    return null;\n            }else\n                throw new RuntimeException(\"结果集列数不唯一  :\"+tClass);\n        }\n        else if(tClass.isInterface()){\n            throw new RuntimeException(\"interface can\'t instance  :\"+tClass);\n        }else if(!tClass.getName().startsWith(FrameworkConfig.basePackage)){\n            throw new RuntimeException(\"无法序列化  :\"+tClass+\" \");\n        }\n        T t=tClass.newInstance();\n        Field field;\n        for (int i = 1,l=metaData.getColumnCount(); i <= l; i++) {\n            if((field=info.fieldMap.get(metaData.getColumnLabel(i)))!=null){\n                int type=metaData.getColumnType(i);\n                switch (type){\n                    case Types.INTEGER:\n                    case Types.SMALLINT:\n                    case Types.FLOAT:\n                    case Types.DOUBLE:\n                    case Types.BIGINT:\n                    case Types.TINYINT:\n                        TypeParseEngine.parseNumber(type,t,field,resultSet,i);\n                        break;\n                    case Types.NUMERIC:\n                        TypeParseEngine.parseNumeric(type,t,field,resultSet,i);\n                        break;\n                    case Types.LONGVARCHAR:\n                    case Types.LONGNVARCHAR:\n                    case Types.CHAR:\n                    case Types.VARCHAR:\n                        TypeParseEngine.parseString(type,t,field,resultSet,i);\n                        break;\n                    case Types.BIT:\n                        TypeParseEngine.parseBit(type,t,field,resultSet,i);\n                        break;\n                    case Types.DATE:\n                    case Types.TIME:\n                    case Types.TIMESTAMP:\n                        TypeParseEngine.parseData(type,t,field,resultSet,i);\n                        break;\n                }\n            }\n        }\n        return t;\n    }\n\n    private static Map<String,Object> valueToMap(ResultSet resultSet, ResultSetMetaData metaData,Class<? extends Map<String,Object>> returnClass) throws SQLException, IllegalAccessException, InstantiationException {\n        Map<String,Object> map;\n        if(returnClass.isInterface()){\n            map=new HashMap<>();\n        }else {\n            map= returnClass.newInstance();\n        }\n        for (int i = 1; i <= metaData.getColumnCount(); i++) {\n            map.put(metaData.getColumnLabel(i),resultSet.getObject(i));\n        }\n        return map;\n    }\n\n\n    private static BeanFieldsInfo getBeanFields(String className) throws ClassNotFoundException {\n        if(!infoMap.containsKey(className)){\n            infoMap.put(className,createBeanInfo(className));\n        }\n        return infoMap.get(className);\n    }\n\n    //缓存class字段信息\n    private synchronized static BeanFieldsInfo createBeanInfo(String className) throws ClassNotFoundException {\n        if(infoMap.containsKey(className)){\n            return infoMap.get(className);\n        }\n        //判断是否是基本数据\n        Class<?> c;\n        if(className.length()<8&&basicObjectMap.containsKey(className)){\n            c=basicObjectMap.get(className);\n        }else {\n            c=Class.forName(className);\n        }\n        BeanFieldsInfo info=new BeanFieldsInfo();\n        info.fieldMap=new HashMap<>();\n        Field[] fields = ClassTool.getClassAllFields(c);\n        info.classes=new Class[fields.length];\n        Alias alias;\n        UseHump useHump;\n        for (int i = 0,l=fields.length; i < l; i++) {\n            fields[i].setAccessible(true);\n            info.classes[i]=fields[i].getDeclaringClass();\n            if((alias=fields[i].getAnnotation(Alias.class))!=null){\n                //别名 和字段名 都可以使用\n                info.fieldMap.put(alias.value(),fields[i]);\n                info.fieldMap.put(fields[i].getName(),fields[i]);\n            }else if((useHump=c.getAnnotation(UseHump.class))!=null){\n                info.fieldMap.put(changeHumpToLowerCase(fields[i].getName(),useHump),fields[i]);\n            }else{\n                info.fieldMap.put(fields[i].getName(),fields[i]);\n            }\n        }\n        return info;\n    }\n    \n    private static String changeHumpToLowerCase(String str,UseHump useHump){\n        StringBuilder sb=new StringBuilder();\n        char[] arr=str.toCharArray();\n        int start=\'A\'+(useHump.value()==UseHump.Change.HUMP_TO_LOWER?0:32);\n        int end=\'Z\'+(useHump.value()==UseHump.Change.HUMP_TO_LOWER?0:32);\n        int change=useHump.value()==UseHump.Change.HUMP_TO_LOWER?32:-32;\n        for (int i = 0; i < arr.length; i++) {\n            if(arr[i]>=start&&arr[i]<=end){\n                sb.append(useHump.separator());\n                sb.append((char)(arr[i]+change));\n            }else {\n                sb.append(arr[i]);\n            }\n        }\n        return sb.toString();\n    }\n\n    private static class BeanFieldsInfo{\n        private Map<String, Field> fieldMap;\n        private Class<?>[] classes;\n    }\n\n}\n\n```', 6);
INSERT INTO `article` VALUES (36, '2020-12-12 01:44:27', '2020-12-14 23:57:52', 1, '<body>\n <p>sssssss</p> \n</body>', '简直6666啊', '牛逼plus', '956115488', 1, '/blog/common/file?fileName=316b3d8a-9286-408e-a7d1-93adef8cc568截屏2020-11-30 上午10.06.56.png', '关于java的博客', NULL, '111', 2, 7, 18, 1607708667282, 'sssssss', 1);
INSERT INTO `article` VALUES (37, '2020-12-12 01:44:27', '2020-12-14 23:57:52', 1, '<body>\n <p>sssssss</p> \n</body>', '简直6666啊', '牛逼plus', '956115488', 1, '/blog/common/file?fileName=316b3d8a-9286-408e-a7d1-93adef8cc568截屏2020-11-30 上午10.06.56.png', '关于java的博客', NULL, '1112', 2, 7, 18, 1607708667282, 'sssssss', 1);
INSERT INTO `article` VALUES (38, '2020-12-12 01:44:27', '2020-12-14 23:57:52', 1, '<body>\n <p>sssssss</p> \n</body>', '简直6666啊', '牛逼plus', '956115488', 1, '/blog/common/file?fileName=316b3d8a-9286-408e-a7d1-93adef8cc568截屏2020-11-30 上午10.06.56.png', '关于java的博客', NULL, '11123', 2, 7, 18, 1607708667282, 'sssssss', 1);
INSERT INTO `article` VALUES (39, '2020-12-12 01:44:27', '2020-12-14 23:57:52', 1, '<body>\n <p>sssssss</p> \n</body>', '简直6666啊', '牛逼plus', '956115488', 1, '/blog/common/file?fileName=316b3d8a-9286-408e-a7d1-93adef8cc568截屏2020-11-30 上午10.06.56.png', '关于java的博客', NULL, '111234', 2, 7, 18, 1607708667282, 'sssssss', 1);
INSERT INTO `article` VALUES (40, '2020-12-12 01:44:27', '2020-12-14 23:57:52', 1, '<body>\n <p>sssssss</p> \n</body>', '简直6666啊', '牛逼plus', '956115488', 1, '/blog/common/file?fileName=316b3d8a-9286-408e-a7d1-93adef8cc568截屏2020-11-30 上午10.06.56.png', '关于java的博客', NULL, '1112345', 2, 7, 18, 1607708667282, 'sssssss', 1);
INSERT INTO `article` VALUES (41, '2020-12-12 01:44:27', '2020-12-14 23:57:52', 1, '<body>\n <p>sssssss</p> \n</body>', '简直6666啊', '牛逼plus', '956115488', 1, '/blog/common/file?fileName=316b3d8a-9286-408e-a7d1-93adef8cc568截屏2020-11-30 上午10.06.56.png', '关于java的博客', NULL, '11123455', 2, 7, 18, 1607708667282, 'sssssss', 1);
INSERT INTO `article` VALUES (42, '2020-12-12 01:44:27', '2020-12-14 23:57:52', 1, '<body>\n <p>sssssss</p> \n</body>', '简直6666啊', '牛逼plus', '956115488', 1, '/blog/common/file?fileName=316b3d8a-9286-408e-a7d1-93adef8cc568截屏2020-11-30 上午10.06.56.png', '关于java的博客', NULL, '111234555', 2, 7, 18, 1607708667282, 'sssssss', 1);
INSERT INTO `article` VALUES (43, '2020-12-12 01:44:27', '2020-12-14 23:57:52', 1, '<body>\n <p>sssssss</p> \n</body>', '简直6666啊', '牛逼plus', '956115488', 1, '/blog/common/file?fileName=316b3d8a-9286-408e-a7d1-93adef8cc568截屏2020-11-30 上午10.06.56.png', '关于java的博客', NULL, '1112345555', 2, 7, 18, 1607708667282, 'sssssss', 1);
INSERT INTO `article` VALUES (44, '2020-12-12 01:44:27', '2020-12-14 23:57:52', 1, '<body>\n <p>sssssss</p> \n</body>', '简直6666啊', '牛逼plus', '956115488', 1, '/blog/common/file?fileName=316b3d8a-9286-408e-a7d1-93adef8cc568截屏2020-11-30 上午10.06.56.png', '关于java的博客', NULL, '11123455555', 2, 7, 18, 1607708667282, 'sssssss', 1);
INSERT INTO `article` VALUES (45, '2020-12-12 01:44:27', '2020-12-14 23:57:52', 1, '<body>\n <p>sssssss</p> \n</body>', '简直6666啊', '牛逼plus', '956115488', 1, '/blog/common/file?fileName=316b3d8a-9286-408e-a7d1-93adef8cc568截屏2020-11-30 上午10.06.56.png', '关于java的博客', NULL, '111234555555', 2, 7, 18, 1607708667282, 'sssssss', 1);
INSERT INTO `article` VALUES (46, '2020-12-12 01:44:27', '2020-12-14 23:57:52', 1, '<body>\n <p>sssssss</p> \n</body>', '简直6666啊', '牛逼plus', '956115488', 1, '/blog/common/file?fileName=316b3d8a-9286-408e-a7d1-93adef8cc568截屏2020-11-30 上午10.06.56.png', '关于java的博客', NULL, '1112345555555', 2, 7, 18, 1607708667282, 'sssssss', 1);
INSERT INTO `article` VALUES (47, '2020-12-12 01:44:27', '2020-12-14 23:57:52', 1, '<body>\n <p>sssssss</p> \n</body>', '简直6666啊', '牛逼plus', '956115488', 1, '/blog/common/file?fileName=316b3d8a-9286-408e-a7d1-93adef8cc568截屏2020-11-30 上午10.06.56.png', '关于java的博客', NULL, '11123455555555', 2, 7, 18, 1607708667282, 'sssssss', 1);
INSERT INTO `article` VALUES (48, '2020-12-12 01:44:27', '2020-12-14 23:57:52', 1, '<body>\n <p>sssssss</p> \n</body>', '简直6666啊', '牛逼plus', '956115488', 1, '/blog/common/file?fileName=316b3d8a-9286-408e-a7d1-93adef8cc568截屏2020-11-30 上午10.06.56.png', '关于java的博客', NULL, '111234555555555', 2, 7, 18, 1607708667282, 'sssssss', 2);
COMMIT;

-- ----------------------------
-- Table structure for category
-- ----------------------------
DROP TABLE IF EXISTS `category`;
CREATE TABLE `category` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '编号',
  `name` varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '分类名',
  `lock` int DEFAULT NULL COMMENT '是否启用',
  `description` varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '描述',
  `create_time` varchar(50) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `create_user` int DEFAULT NULL COMMENT '分类所属用户',
  `update_time` varchar(50) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '修改时间',
  `time_stamp` bigint DEFAULT NULL COMMENT '时间戳',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=40 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- ----------------------------
-- Records of category
-- ----------------------------
BEGIN;
INSERT INTO `category` VALUES (1, 'Python', 0, '一个有关于科学的分类', '2020-12-12 00:56:19', 2, '2020-12-13 23:39:12', 1607705779515);
INSERT INTO `category` VALUES (2, 'Java', 1, '一个有关于Java的分类', '2020-12-12 00:56:52', 2, NULL, 1607705812404);
INSERT INTO `category` VALUES (3, 'C++', 0, '一个关于C++的分类', '2020-12-12 00:57:17', 2, '2020-12-13 23:25:18', 1607705837472);
INSERT INTO `category` VALUES (27, '无情啊', 1, '失敬失敬啊兄弟', '2020-12-12 01:26:19', 2, '2020-12-13 20:48:52', 1607707579567);
INSERT INTO `category` VALUES (28, '胡世扬', 0, '一个', '2020-12-14 10:01:17', 2, NULL, 1607911277558);
INSERT INTO `category` VALUES (29, '分类1', 0, '一个', '2020-12-14 10:01:17', 2, NULL, 1607911277558);
INSERT INTO `category` VALUES (30, '分类2', 0, '一个', '2020-12-14 10:01:17', 2, NULL, 1607911277558);
INSERT INTO `category` VALUES (31, '分类3', 0, '一个', '2020-12-14 10:01:17', 2, NULL, 1607911277558);
INSERT INTO `category` VALUES (32, '分类4', 0, '11', '2020-12-14 10:01:17', 2, NULL, 1607911277558);
INSERT INTO `category` VALUES (33, '分类5', 0, '11', '2020-12-14 10:01:17', 2, NULL, 1607911277558);
INSERT INTO `category` VALUES (34, '分类6', 0, '11', '2020-12-14 10:01:17', 2, NULL, 1607911277558);
INSERT INTO `category` VALUES (35, '分类7', 0, '11', '2020-12-14 10:01:17', 2, NULL, 1607911277558);
INSERT INTO `category` VALUES (36, '分类8', 0, '11', '2020-12-14 10:01:17', 2, NULL, 1607911277558);
INSERT INTO `category` VALUES (37, '分类9', 0, '11', '2020-12-14 10:01:17', 2, NULL, 1607911277558);
INSERT INTO `category` VALUES (38, '分类10', 0, '11', '2020-12-14 10:01:17', 2, NULL, 1607911277558);
INSERT INTO `category` VALUES (39, 'Java', 0, 'Java的文章', '2020-12-24 20:12:04', 18, NULL, 1608811924405);
COMMIT;

-- ----------------------------
-- Table structure for comment
-- ----------------------------
DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment` (
  `id` int NOT NULL AUTO_INCREMENT,
  `article_id` int NOT NULL,
  `user_id` int NOT NULL,
  `content` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `common_time` varchar(50) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `create_time_l` bigint DEFAULT NULL,
  `user_type` int DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=24 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- ----------------------------
-- Records of comment
-- ----------------------------
BEGIN;
INSERT INTO `comment` VALUES (9, 14, 2, '这是一条评论', '2020-12-15 22:40:23', 1608043223867, 2);
INSERT INTO `comment` VALUES (10, 14, 2, '这是一条评论1122', '2020-12-15 22:40:29', 1608043229982, 2);
INSERT INTO `comment` VALUES (11, 14, 2, '这是一条评论1122 2333sdnis hishachkohbjz codxbjcidbjdsbjdfbjdfbjnokjncxsvnjlvdjnldvsbjon', '2020-12-15 22:40:39', 1608043239640, 2);
INSERT INTO `comment` VALUES (14, 13, 2, '这是测试的博客这是测试的博客这是测试的博客这是测试的博客这是测试的博客这是测试的博客这是测试的博客这是测试的博客这是测试的博客这是测试的博客', '2020-12-15 23:23:25', 1608045805942, 2);
INSERT INTO `comment` VALUES (22, 16, 2, '牛逼', '2020-12-20 01:07:54', 1608397674440, 2);
INSERT INTO `comment` VALUES (23, 16, 1, '牛逼', '2020-12-21 23:04:23', 1608563063016, 1);
COMMIT;

-- ----------------------------
-- Table structure for sys_menu
-- ----------------------------
DROP TABLE IF EXISTS `sys_menu`;
CREATE TABLE `sys_menu` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `icon` varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `parent_id` int DEFAULT NULL,
  `type` int NOT NULL DEFAULT '1' COMMENT '0管理员 1用户',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- ----------------------------
-- Records of sys_menu
-- ----------------------------
BEGIN;
INSERT INTO `sys_menu` VALUES (1, '文章管理', '&#xe705;', '', NULL, 1);
INSERT INTO `sys_menu` VALUES (2, '写博客', NULL, '/user/manage/article/new', 1, 1);
INSERT INTO `sys_menu` VALUES (3, '文章列表', NULL, '/user/manage/article/list', 1, 1);
INSERT INTO `sys_menu` VALUES (4, '分类管理', NULL, '/user/manage/article/type', 1, 1);
INSERT INTO `sys_menu` VALUES (5, '评论管理', '&#xe606;', '', NULL, 1);
INSERT INTO `sys_menu` VALUES (6, '评论列表', NULL, '/user/manage/comment', 5, 1);
INSERT INTO `sys_menu` VALUES (7, '回收站', NULL, '/user/manage/article/delete/list', 1, 1);
INSERT INTO `sys_menu` VALUES (8, '个人管理', '&#xe66f;', '', NULL, 1);
INSERT INTO `sys_menu` VALUES (9, '修改信息', NULL, '/user/manage/editSelf', 8, 1);
INSERT INTO `sys_menu` VALUES (11, '用户管理', '&#xe770;', '', NULL, 0);
INSERT INTO `sys_menu` VALUES (12, '用户列表', NULL, '/admin/user/list', 11, 0);
INSERT INTO `sys_menu` VALUES (13, '新增用户', NULL, '/admin/user/add', 11, 0);
INSERT INTO `sys_menu` VALUES (14, '博客管理', '&#xe705;', '', NULL, 0);
INSERT INTO `sys_menu` VALUES (15, '博客列表', NULL, '/admin/blog/list', 14, 0);
INSERT INTO `sys_menu` VALUES (16, '评论列表', NULL, '/admin/comment/list', 14, 0);
INSERT INTO `sys_menu` VALUES (17, '系统管理', '&#xe620;', '', NULL, 0);
INSERT INTO `sys_menu` VALUES (18, '公告管理', NULL, '/admin/notice/list', 17, 0);
INSERT INTO `sys_menu` VALUES (20, '修改信息', NULL, '/admin/editSelf', 17, 0);
COMMIT;

-- ----------------------------
-- Table structure for sys_notice
-- ----------------------------
DROP TABLE IF EXISTS `sys_notice`;
CREATE TABLE `sys_notice` (
  `id` int NOT NULL AUTO_INCREMENT,
  `title` varchar(255) COLLATE utf8mb4_general_ci NOT NULL,
  `content` longtext COLLATE utf8mb4_general_ci,
  `create_time` varchar(50) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `create_time_l` bigint DEFAULT NULL,
  `update_time` varchar(50) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `show` int DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- ----------------------------
-- Records of sys_notice
-- ----------------------------
BEGIN;
INSERT INTO `sys_notice` VALUES (1, '测试公告', '![](/blog/common/file?fileName=450112a4-78dc-4ba3-8e3b-bf346537e1d2)', '2020-12-23 22:20:55', 1608732966586, '2020-12-23 23:25:56', 1);
COMMIT;

-- ----------------------------
-- Table structure for sys_operation
-- ----------------------------
DROP TABLE IF EXISTS `sys_operation`;
CREATE TABLE `sys_operation` (
  `id` int NOT NULL AUTO_INCREMENT,
  `user_id` int NOT NULL,
  `operation` varchar(255) COLLATE utf8mb4_general_ci NOT NULL,
  `operation_type` int NOT NULL,
  `operation_time` varchar(50) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `ip` varchar(80) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `client` varchar(80) COLLATE utf8mb4_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=151 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- ----------------------------
-- Records of sys_operation
-- ----------------------------
BEGIN;
INSERT INTO `sys_operation` VALUES (1, 1, '加入Simple Blog', 1, '2020-12-09 12:35:30', '127.0.0.1', 'web');
INSERT INTO `sys_operation` VALUES (2, 2, '加入Simple Blog', 1, '2020-12-09 12:35:30', '127.0.0.1', 'web');
INSERT INTO `sys_operation` VALUES (3, 2, '发布博客:测试博客', 2, '2020-12-10 23:26:34', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (4, 2, '发布博客:这是第二篇博客', 2, '2020-12-10 23:31:28', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (5, 2, '发布博客:这是第二篇博客', 2, '2020-12-10 23:33:00', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (6, 2, '发布博客:三生三世', 2, '2020-12-10 23:34:57', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (7, 2, '发布博客:sss', 2, '2020-12-10 23:36:57', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (8, 2, '发布博客:ksokso ', 2, '2020-12-10 23:37:53', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (9, 2, '发布博客:ssss', 2, '2020-12-10 23:38:23', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (10, 2, '发布博客:sss', 2, '2020-12-10 23:39:21', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (11, 2, '发布博客:ss', 2, '2020-12-10 23:41:06', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (12, 2, '发布博客:ss', 2, '2020-12-10 23:41:27', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (13, 2, '发布博客:sss', 2, '2020-12-10 23:41:50', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (14, 2, '添加分类:科学', 8, '2020-12-12 00:56:19', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (15, 2, '添加分类:Java', 8, '2020-12-12 00:56:52', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (16, 2, '添加分类:C++', 8, '2020-12-12 00:57:17', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (17, 2, '添加分类:爱情', 8, '2020-12-12 01:00:20', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (18, 2, '添加分类:无情啊', 8, '2020-12-12 01:26:19', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (19, 2, '发布博客:aaa', 2, '2020-12-12 01:44:27', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (20, 2, '修改分类:sss 为: 无情啊', 8, NULL, '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (21, 2, '修改分类:无情啊 为: 无情啊', 8, NULL, '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (22, 2, '解锁分类:无情啊', 8, '2020-12-13 23:22:25', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (23, 2, '锁定分类:无情啊', 8, '2020-12-13 23:22:30', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (24, 2, '锁定分类:C++', 8, '2020-12-13 23:23:13', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (25, 2, '锁定分类:Java', 8, '2020-12-13 23:23:16', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (26, 2, '解锁分类:Java', 8, '2020-12-13 23:23:19', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (27, 2, '解锁分类:无情啊', 8, '2020-12-13 23:23:52', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (28, 2, '解锁分类:C++', 8, '2020-12-13 23:24:28', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (29, 2, '解锁分类:C++', 8, '2020-12-13 23:24:32', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (30, 2, '解锁分类:C++', 8, '2020-12-13 23:24:34', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (31, 2, '解锁分类:C++', 8, '2020-12-13 23:24:36', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (32, 2, '修改分类:C++ 为: C++', 8, '2020-12-13 23:25:18', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (33, 2, '解锁分类:C++', 8, '2020-12-13 23:25:20', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (34, 2, '解锁分类:C++', 8, '2020-12-13 23:25:23', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (35, 2, '解锁分类:C++', 8, '2020-12-13 23:25:24', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (36, 2, '锁定分类:C++', 8, '2020-12-13 23:26:40', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (37, 2, '锁定分类:C++', 8, '2020-12-13 23:26:43', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (38, 2, '解锁分类:C++', 8, '2020-12-13 23:27:09', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (39, 2, '解锁分类:C++', 8, '2020-12-13 23:27:13', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (40, 2, '锁定分类:C++', 8, '2020-12-13 23:27:17', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (41, 2, '锁定分类:C++', 8, '2020-12-13 23:27:19', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (42, 2, '解锁分类:C++', 8, '2020-12-13 23:27:23', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (43, 2, '解锁分类:C++', 8, '2020-12-13 23:27:27', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (44, 2, '锁定分类:Java', 8, '2020-12-13 23:27:29', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (45, 2, '锁定分类:Java', 8, '2020-12-13 23:27:32', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (46, 2, '解锁分类:Java', 8, '2020-12-13 23:27:34', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (47, 2, '锁定分类:Java', 8, '2020-12-13 23:27:37', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (48, 2, '锁定分类:Java', 8, '2020-12-13 23:27:39', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (49, 2, '锁定分类:C++', 8, '2020-12-13 23:28:18', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (50, 2, '锁定分类:C++', 8, '2020-12-13 23:28:20', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (51, 2, '锁定分类:C++', 8, '2020-12-13 23:28:22', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (52, 2, '解锁分类:C++', 8, '2020-12-13 23:28:41', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (53, 2, '解锁分类:C++', 8, '2020-12-13 23:28:44', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (54, 2, '解锁分类:Java', 8, '2020-12-13 23:29:05', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (55, 2, '解锁分类:Java', 8, '2020-12-13 23:29:08', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (56, 2, '解锁分类:科学', 8, '2020-12-13 23:30:04', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (57, 2, '锁定分类:Java', 8, '2020-12-13 23:30:07', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (58, 2, '锁定分类:Java', 8, '2020-12-13 23:30:10', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (59, 2, '锁定分类:C++', 8, '2020-12-13 23:30:12', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (60, 2, '锁定分类:Java', 8, '2020-12-13 23:30:14', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (61, 2, '解锁分类:C++', 8, '2020-12-13 23:30:34', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (62, 2, '解锁分类:C++', 8, '2020-12-13 23:30:37', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (63, 2, '锁定分类:C++', 8, '2020-12-13 23:30:41', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (64, 2, '锁定分类:无情啊', 8, '2020-12-13 23:33:04', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (65, 2, '锁定分类:无情啊', 8, '2020-12-13 23:33:06', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (66, 2, '解锁分类:C++', 8, '2020-12-13 23:33:09', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (67, 2, '锁定分类:C++', 8, '2020-12-13 23:33:12', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (68, 2, '解锁分类:C++', 8, '2020-12-13 23:33:36', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (69, 2, '解锁分类:无情啊', 8, '2020-12-13 23:35:14', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (70, 2, '锁定分类:无情啊', 8, '2020-12-13 23:36:37', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (71, 2, '锁定分类:C++', 8, '2020-12-13 23:36:41', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (72, 2, '解锁分类:Java', 8, '2020-12-13 23:36:43', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (73, 2, '解锁分类:C++', 8, '2020-12-13 23:37:21', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (74, 2, '解锁分类:无情啊', 8, '2020-12-13 23:38:29', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (75, 2, '锁定分类:C++', 8, '2020-12-13 23:38:31', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (76, 2, '锁定分类:Java', 8, '2020-12-13 23:38:33', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (77, 2, '锁定分类:科学', 8, '2020-12-13 23:38:34', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (78, 2, '解锁分类:Java', 8, '2020-12-13 23:38:36', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (79, 2, '解锁分类:C++', 8, '2020-12-13 23:38:38', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (80, 2, '解锁分类:科学', 8, '2020-12-13 23:38:40', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (81, 2, '锁定分类:无情啊', 8, '2020-12-13 23:38:45', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (82, 2, '锁定分类:Java', 8, '2020-12-13 23:38:48', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (83, 2, '锁定分类:科学', 8, '2020-12-13 23:38:59', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (84, 2, '解锁分类:科学', 8, '2020-12-13 23:39:02', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (85, 2, '修改分类:科学 为: Python', 8, '2020-12-13 23:39:12', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (86, 2, '锁定分类:C++', 8, '2020-12-14 10:01:00', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (87, 2, '解锁分类:C++', 8, '2020-12-14 10:01:03', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (88, 2, '添加分类:胡世扬', 8, '2020-12-14 10:01:17', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (89, 2, '删除博客:测试博客', 2, '2020-12-14 14:45:44', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (90, 2, '恢复博客:测试博客', 2, '2020-12-14 15:18:05', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (91, 2, '删除博客:测试博客', 4, '2020-12-14 15:18:37', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (92, 2, '删除回收站博客:测试博客', 2, '2020-12-14 15:18:43', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (93, 2, '修改个人信息', 9, '2020-12-14 18:47:44', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (94, 2, '修改个人信息', 9, '2020-12-14 18:48:13', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (95, 2, '修改个人信息', 9, '2020-12-14 18:50:03', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (96, 2, '修改个人信息', 9, '2020-12-14 18:51:54', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (97, 2, '修改个人信息', 9, '2020-12-14 18:52:12', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (98, 2, '发布博客:测试博客2222', 2, '2020-12-14 19:24:58', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (99, 2, '发布博客:你好世界！', 2, '2020-12-14 23:25:46', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (100, 2, '修改博客:这是第二篇博客 -> 这是第二篇博客', 10, '2020-12-14 23:54:30', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (101, 2, '修改博客:这是第二篇博客 -> 这是第二篇博客', 10, '2020-12-14 23:57:46', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (102, 2, '修改博客:关于java的博客 -> 关于java的博客', 10, '2020-12-14 23:57:52', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (103, 2, '修改博客:你好世界！ -> 你好世界！', 10, '2020-12-14 23:58:35', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (104, 2, '修改博客:你好世界！ -> 你好世界！', 10, '2020-12-15 21:42:27', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (105, 2, '修改博客:你好世界！ -> 你好世界！', 10, '2020-12-15 21:45:48', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (106, 2, '修改博客:测试博客2222 -> 测试博客2222', 10, '2020-12-15 22:54:05', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (107, 2, '发布博客:私密的博客测试', 2, '2020-12-15 22:54:50', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (108, 2, '发布博客:实现一个简单的mybatis orm框架', 2, '2020-12-20 01:07:38', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (109, 2, '修改个人信息', 9, '2020-12-21 10:32:51', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (110, 2, '修改个人信息', 9, '2020-12-21 10:35:35', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (111, 1, '添加新用户:test11111', 11, '2020-12-21 14:31:45', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (112, 1, '添加新用户:hushiyang', 11, '2020-12-21 14:32:42', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (113, 1, '修改用户:hushiyang 到:hushiyang', 12, '2020-12-21 14:51:19', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (114, 1, '修改用户:hushiyang 到:hushiyang', 12, '2020-12-21 14:52:10', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (115, 1, '修改用户:hushiyang 到:hushiyang', 12, '2020-12-21 14:52:24', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (116, 1, '修改用户:test5 到:test5', 12, '2020-12-21 15:06:14', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (117, 1, '修改用户:test5 到:test5', 12, '2020-12-21 15:06:50', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (118, 1, '锁定博客:实现一个简单的mybatis orm框架', 13, '2020-12-21 16:15:10', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (119, 1, '解锁博客:实现一个简单的mybatis orm框架', 14, '2020-12-21 16:15:51', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (120, 1, '锁定博客:实现一个简单的mybatis orm框架', 13, '2020-12-21 16:15:57', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (121, 1, '解锁博客:实现一个简单的mybatis orm框架', 14, '2020-12-21 16:17:03', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (122, 1, '锁定博客:实现一个简单的mybatis orm框架', 13, '2020-12-21 16:17:06', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (123, 1, '解锁博客:实现一个简单的mybatis orm框架', 14, '2020-12-21 16:17:28', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (124, 1, '锁定博客:实现一个简单的mybatis orm框架', 13, '2020-12-21 16:17:48', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (125, 1, '解锁博客:实现一个简单的mybatis orm框架', 14, '2020-12-21 16:17:50', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (126, 1, '锁定博客:实现一个简单的mybatis orm框架', 13, '2020-12-21 19:08:48', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (127, 1, '解锁博客:实现一个简单的mybatis orm框架', 14, '2020-12-21 19:08:50', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (128, 1, '删除博客:这是第二篇博客', 12, '2020-12-21 19:08:59', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (129, 1, '锁定博客:实现一个简单的mybatis orm框架', 13, '2020-12-21 19:14:06', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (130, 1, '添加新用户:test023', 11, '2020-12-21 19:28:34', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (131, 1, '解锁博客:实现一个简单的mybatis orm框架', 14, '2020-12-21 19:32:01', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (132, 1, '删除博客:这是第二篇博客', 12, '2020-12-24 18:54:11', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (133, 1, '修改个人信息', 9, '2020-12-24 19:46:50', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (134, 1, '添加新用户:gjy', 11, '2020-12-24 20:06:02', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (135, 1, '修改用户:gjy 到:gjy', 12, '2020-12-24 20:06:53', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (136, 1, '修改用户:gjy 到:gjy', 12, '2020-12-24 20:08:21', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (137, 18, '添加分类:Java', 8, '2020-12-24 20:12:04', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (138, 18, '发布博客:设计一个简单的增删查改工具类', 2, '2020-12-24 20:13:37', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (139, 18, '发布博客:设计一个简单的序列化工具类', 2, '2020-12-24 20:26:35', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (140, 18, '修改个人信息', 9, '2020-12-24 20:28:29', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (141, 1, '添加新用户:1111', 11, '2020-12-26 12:09:29', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (142, 1, '添加新用户:1111', 11, '2020-12-26 12:10:00', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (143, 1, '修改用户:1111 到:1111', 12, '2020-12-26 12:10:07', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (144, 1, '添加新用户:jsiijsi', 11, '2020-12-26 16:47:46', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (145, 2, '修改个人信息', 9, '2020-12-26 19:20:48', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (146, 2, '修改个人信息', 9, '2020-12-26 19:21:38', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (147, 1, '添加新用户:ssss', 11, '2020-12-26 22:49:57', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (148, 1, '添加新用户:<a>11</a>', 11, '2020-12-26 22:50:36', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (149, 1, '添加新用户:&#62;a&#60;aa&#62;/a&#60;', 11, '2020-12-26 23:07:57', '0:0:0:0:0:0:0:1', 'web');
INSERT INTO `sys_operation` VALUES (150, 1, '添加新用户:&#60;a&#62;11&#60;/a&#62;', 11, '2020-12-26 23:08:39', '0:0:0:0:0:0:0:1', 'web');
COMMIT;

-- ----------------------------
-- Table structure for sys_user
-- ----------------------------
DROP TABLE IF EXISTS `sys_user`;
CREATE TABLE `sys_user` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '用户编码',
  `username` varchar(30) COLLATE utf8mb4_general_ci NOT NULL COMMENT '用户登录账号',
  `password` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '用户登录密码',
  `nickname` varchar(50) COLLATE utf8mb4_general_ci NOT NULL COMMENT '用户昵称',
  `lock` int NOT NULL DEFAULT '0' COMMENT '账号是否可用',
  `last_login_time` varchar(50) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `last_login_ip` varchar(50) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `user_type` int NOT NULL DEFAULT '1' COMMENT '用户类型',
  `face` varchar(150) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '头像',
  `sign` varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '签名',
  `create_time` varchar(40) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '注册时间',
  `sex` int DEFAULT '0' COMMENT '性别',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- ----------------------------
-- Records of sys_user
-- ----------------------------
BEGIN;
INSERT INTO `sys_user` VALUES (1, 'admin', '202cb962ac59075b964b07152d234b70', '帅气的管理员', 0, '2020-12-26 23:25:26', '0:0:0:0:0:0:0:1', 0, NULL, '河洲花艳爚，庭树光彩蒨.白云天台山，可思不可见。', '2020-12-09 12:35:30', 0);
INSERT INTO `sys_user` VALUES (2, 'test', '202cb962ac59075b964b07152d234b70', '自在', 0, '2020-12-26 23:25:54', '0:0:0:0:0:0:0:1', 1, '/blog/common/file?fileName=26303591-8a9d-498d-99c6-9d0bd2097177e14b09b2a010356e872b5198f11098c5.jpg', '河洲花艳爚，庭树光彩蒨.白云天台山，可思不可见', '2020-12-09 12:35:30', 0);
INSERT INTO `sys_user` VALUES (17, 'test023', '123', '小胡', 0, NULL, NULL, 1, NULL, '', '2020-12-21 19:28:34', 0);
INSERT INTO `sys_user` VALUES (18, 'gjy', '202cb962ac59075b964b07152d234b70', '自在', 0, '2020-12-28 13:32:38', '0:0:0:0:0:0:0:1', 1, '/blog/common/file?fileName=50ad6b74-9ec0-4b65-b196-f832e0e7bc3a', 'NullPointException', '2020-12-24 20:06:02', 0);
INSERT INTO `sys_user` VALUES (19, '1111', '202cb962ac59075b964b07152d234b70', '111', 0, NULL, NULL, 1, NULL, '1111', '2020-12-26 12:10:00', 0);
INSERT INTO `sys_user` VALUES (20, 'jsiijsi', '123', '设计师', 0, NULL, NULL, 1, NULL, '是是是', '2020-12-26 16:47:46', 0);
INSERT INTO `sys_user` VALUES (23, '&#62;a&#60;aa&#62;/a&#60;', '123', 'aaaa', 0, NULL, NULL, 1, NULL, 'aaa', '2020-12-26 23:07:57', 0);
INSERT INTO `sys_user` VALUES (24, '&#60;a&#62;11&#60;/a&#62;', '123', '&#60;a&#62;11&#60;/a&#62;', 0, NULL, NULL, 1, NULL, '&#60;a&#62;11&#60;/a&#62;', '2020-12-26 23:08:39', 0);
COMMIT;

SET FOREIGN_KEY_CHECKS = 1;
